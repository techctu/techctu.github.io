<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Avalon</title>
    <description>抱朴 守拙
</description>
    <link>http://techctu.github.io//</link>
    <atom:link href="http://techctu.github.io//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 12 Oct 2016 17:42:52 +0800</pubDate>
    <lastBuildDate>Wed, 12 Oct 2016 17:42:52 +0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>为什么使用react/使用react有什么好处？</title>
        <description>&lt;p&gt;接手前端后，摸着石头过河，采用推荐的新的react框架，踩过不少坑，终于项目平稳上线。随之而来就会有许多人问：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;为什么要使用react？react有什么好处？和jQuery/velocity/bootstrap/AngularJS/Vue.js相比有什么优点？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;其中我只用过jQuery+velocity，用过一点bootstrap，AngularJS和Vue.js都是道听途说，没有真正接触，不敢妄加评论，只能从自身经历，提供一点浅见。&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;问题的本质&lt;/h1&gt;
&lt;p&gt;这个问题的应该需求分析一下：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;使用react开发H5页面复杂吗？对新人的学习曲线怎么样？开发是否方便快捷？调试是否方便？&lt;/li&gt;
  &lt;li&gt;react能解决哪些方面的问题？不能解决哪些方面的问题？还需要什么补充？&lt;/li&gt;
  &lt;li&gt;好像没有3了。&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;react&quot;&gt;React和现在使用的相关技术&lt;/h1&gt;
&lt;p&gt;首先，重申一点，react是一个UI框架，更正确的说法，应该只是提供了构建自己的UI框架的底层库。举个栗子，蚂蚁金服的ant design和啊妹子UI，都可以说是基于react构建的UI框架，包含了大家熟悉的按钮、轮播图、单选按钮组等组件。&lt;/p&gt;

&lt;p&gt;而前端的客户端部分，也是存在MVC，或者流行的MV*结构的。所以，react肯定是需要其他方面技术补充的。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;为什么不直接使用ant design/Amaze UI？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;我们构建的是面客系统，会有自己的设计风格，而使用ant design或是其他框架，其框架太重，不适合按照我们的特殊需求进行定制。这类框架比较适合内部系统或者是管理系统使用。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;由于React只是一个底层库，所以react需要一些其他的技术来构建SPA（单页面应用），如：依赖管理和打包的webpack、前端路由react-router、状态管理flux/redux/reflux等。&lt;/p&gt;

&lt;p&gt;下面从我的经验介绍一下React及其系列相关技术的优缺点。&lt;/p&gt;

&lt;h1 id=&quot;react-1&quot;&gt;React开发的优点&lt;/h1&gt;
&lt;p&gt;React的开发其实是一件非常简单的事情。React的开发除了一个由于保留字需要把HTML的 &lt;code&gt;class&lt;/code&gt; 替换成 &lt;code&gt;className&lt;/code&gt;，剩下的就是专注于使用流程和状态来控制页面（JavaScript），以及将状态对应到正确的样式上（JSX）。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;简单，封装&lt;/h2&gt;
&lt;p&gt;如果使用过jQuery的第三方组件，或者bootstrap等，一旦页面比较复杂，就会碰到重命名、选择器等问题；如果使用过AngularJS，或者一些其他模板引擎，一定会学习这些库特有的一些语法，或是标签，如：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// AngularJS的循环遍历&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ngFor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#hero of heroes&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;而在react里，你只需要会HTML和JavaScript。什么是jsx？&lt;/p&gt;

&lt;p&gt;这是html：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;background-color: #fff;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;这是HTML&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这是JavaScript（ECMAScript 2015/ES6）：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SomeClass&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;functionA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这是JSX：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myDivElement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;foo&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;ReactDOM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myDivElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;example&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 更高级一点，自定义组件&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyComponent&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 面向对象中眼熟的继承&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// react封装的自定义组件的参数传递方式&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hello&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// react的组件渲染方法&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;自定义&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;组件&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/label&amp;gt;&amp;lt;lable&amp;gt;{this.state.hello}&amp;lt;/lable&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/div&amp;gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hello&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;world&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myDivElement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MyComponent&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 给自定义组件传参&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;ReactDOM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myDivElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;example&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;JSX很简单，就是在js中使用HTML标签组成的HTML片段，&lt;strong&gt;没有奇怪的属性，标签，方法&lt;/strong&gt;，&lt;strong&gt;没有奇怪的属性，标签，方法&lt;/strong&gt;，&lt;strong&gt;没有奇怪的属性，标签，方法&lt;/strong&gt;，我喜欢的特性说三遍。&lt;/p&gt;

&lt;p&gt;所以，react的核心思想就是，让开发人员关注业务流程变化导致的状态变化，将状态对应到具体的页面展示上，而对DOM的操作，交给react来进行。这样的方式，非常适用于目前由第三方出静态页面，我们的开发人员来实现最终效果的分工方式。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;强大的开发工具&lt;/h2&gt;
&lt;p&gt;在Java开发的时候，我们已经习惯了代码高亮、自动补全、语法提示、源码定位、规范检查、压缩混淆打包等功能，react开发自然也是有这一系列工具的，涵盖了Sublime、Atom、VSCode等多种编辑器，还具有在Chrome、Firefox进行调试的插件。&lt;/p&gt;

&lt;p&gt;虽然经常有人吹牛说能用记事本写出千行代码，然而那只是个人能力，总不能要求所有人都具备这种能力，所以有好用的工具为何不用呢？自动化工具的使用，才利于项目的工程化，提高项目组整体的实施水平，极大提高开发效率，甚至一个好的代码高亮主题还能吸引妹子在你身后围观你编码。&lt;/p&gt;

&lt;h2 id=&quot;unix&quot;&gt;UNIX哲学&lt;/h2&gt;
&lt;p&gt;专注于解决一个问题，小而精，而非大而全。&lt;/p&gt;

&lt;p&gt;尤其是在我们目前使用SpringMVC处理动态请求，使用nginx处理静态请求的架构下；具有自己的UE和UI设计的条件下，那些大而全的现有框架的一些隐蔽的使用条件，如某些库所需的支持等，和按照设计对一些内容进行改造等，非常繁琐不便利。&lt;/p&gt;

&lt;p&gt;React提供了一个完整的UI渲染更新流程，设计了一个组件封装的生命周期。使用react，将DOM操作交给react，能使开发人员专注于业务流程，减少繁琐的DOM操作的开发，降低由于DOM操作导致的bug（在使用jQuery的年代很常见，bootstrap也是，很多以HTML为设计核心的难以封装模板引擎也是）。&lt;/p&gt;

&lt;p&gt;使用小而精的工具，能使我们对手中的项目了若指掌，避免莫名的问题。&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;丰富的库支持&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/search?q=react&quot;&gt;21465 results for ‘react’.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;社区和文档支持等&lt;/h2&gt;
&lt;p&gt;React具有&lt;a href=&quot;https://facebook.github.io/react/docs/getting-started.html&quot;&gt;比较详细的文档&lt;/a&gt;、&lt;a href=&quot;https://facebook.github.io/react/docs/videos.html&quot;&gt;教学视频&lt;/a&gt;和大量的&lt;a href=&quot;https://github.com/facebook/react/wiki/Examples&quot;&gt;示例代码、脚手架&lt;/a&gt;，在&lt;a href=&quot;https://github.com/&quot;&gt;某知名大型国际同性交友网站&lt;/a&gt;上能找到&lt;a href=&quot;https://github.com/search?utf8=%E2%9C%93&amp;amp;q=react&quot;&gt;10W+相关代码&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&quot;react-2&quot;&gt;React开发的缺点&lt;/h1&gt;
&lt;p&gt;大致说完了优点，来说说缺点。&lt;/p&gt;

&lt;h2 id=&quot;javascript&quot;&gt;JavaScript发展快速，导致了混乱&lt;/h2&gt;
&lt;p&gt;这几年是JavaScript，嗯，ECMAScript发展迅速的一年，前端相关们都各有各的野心，浏览器厂商和标准组织合纵连横，谷歌微软苹果互相掐架，微软Mozilla眉来眼去，两年就从ES5到了ES6眼看着又要马不停蹄奔向ES7了，这就导致目前百度搜索到的react示例大部分使用ES5，一部分使用ES6，少量使用ES7，&lt;strong&gt;不利于初学者学习&lt;/strong&gt;，尤其是大部分人都是从学习&lt;a href=&quot;http://www.ruanyifeng.com/blog/2015/03/react.html&quot;&gt;写blog写到阿里的某大牛&lt;/a&gt;开始。&lt;/p&gt;

&lt;p&gt;而我们，使用的是ES6。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;注：JavaScript是ECMA-262标准的实现和扩展，我们使用的ES6基于ECMA-262 6th Edition。&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-5&quot;&gt;太多工具&lt;/h2&gt;
&lt;p&gt;既然要拥抱UNIX哲学，那么就会面临大量工具选择的问题：编辑器、构建、脚手架、规则校验、测试等，都需要进行选择、配置，以便项目组进行开发。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;虽然我写了一些工具配置使用说明，但不知为何很多人还是使用一个没有安装任何插件的Sublime/Atom进行开发，难道都是记事本写十万行不出bug的大牛？&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;react-3&quot;&gt;React设计思想&lt;/h2&gt;
&lt;p&gt;React和相关系列技术的设计思想，是开发人员使用react的最大门槛。&lt;/p&gt;

&lt;p&gt;React的willMount-didMount-willReceiveProps-shouldUpdate-willUpdate-didUpdate-willUnmount的生命周期，规范了DOM的更新，同时也提高了学习门槛。开发人员需要了解何时重写生命周期方法，这就要求开发人员对页面可能发生的状态迁移和目标结果有充分了解。事实上，我觉得，开发人员也应该清楚页面的状态迁移和目标结果——至少是大部分的。&lt;/p&gt;

&lt;p&gt;同时，react支持多种创建组件的方式：React.createClass、ES6 Classes和stateless functional components（无状态组件）。&lt;/p&gt;

&lt;p&gt;应该使用哪个方式？开发人员会面临混乱。&lt;/p&gt;

&lt;p&gt;React官方指出应该分为两层：使用无状态组件渲染页面各个部分；使用ES6 Classes保持页面状态；React.createClass是ES5及其之前的东西，请勿使用——恰巧这是目前国内大部分示例使用的方式。&lt;/p&gt;

&lt;p&gt;同时目前由于页面不是很复杂所以没有采用的各大状态管理机制，也暂时降低了开发难度。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;从开发的支持筛选、搜索的商户列表页来看，似乎马上也要使用flux/redux/reflux一类了，蓝瘦，香菇。&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;section-6&quot;&gt;总结&lt;/h1&gt;
&lt;p&gt;在项目从2015年底需求研究开始到2016年4月开始一个月开发一个月测试投产上线，再到10月的二期期间，经历了接触react、webpack、ES6、react-router等到利用空档偷偷摸摸重构项目、修改目录结构、修改代码编写范例、利用非工作时间充电等，对这一系列技术有了一定的了解。&lt;/p&gt;

&lt;p&gt;总的来说，react的使用和大部分技术一样，在一个团队里，只需要一个技术比较好的人搭建了boilerplate，写了几个sample，其他人依样画葫芦就可以了。而项目质量，从来不是一门语言、一个库或者框架就能决定的。&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Oct 2016 00:00:00 +0800</pubDate>
        <link>http://techctu.github.io//2016/10/10/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8react%E4%BD%BF%E7%94%A8react%E6%9C%89%E4%BB%80%E4%B9%88%E5%A5%BD%E5%A4%84.html</link>
        <guid isPermaLink="true">http://techctu.github.io//2016/10/10/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8react%E4%BD%BF%E7%94%A8react%E6%9C%89%E4%BB%80%E4%B9%88%E5%A5%BD%E5%A4%84.html</guid>
        
        <category>react</category>
        
        
      </item>
    
      <item>
        <title>react-router：从hashHistory到browserHistory</title>
        <description>&lt;p&gt;项目开始使用react-router时由于工期原因，使用了hashHistory，在url末尾会形成&lt;code&gt;/#/user/haishanh?_k=adseis&lt;/code&gt;中&lt;code&gt;_k=adseis&lt;/code&gt;的query字符串。这在浏览器中打开时会让用户感到迷惑。&lt;/p&gt;

&lt;h1 id=&quot;hashhistoryquerykey&quot;&gt;hashHistory和queryKey&lt;/h1&gt;
&lt;p&gt;在一些旧的浏览器中，不支持H5提供的新的接口如pushState，则使用了该方法生成key来读写window.sessionStorage的内容，实现页面跳转和回退时保持页面状态的功能，如类似新浪微博列表页请求了几次更多微博，进入详情页面后返回到列表页之前获取的微博仍然在里面无需重复之前的请求；又或者一个流程多个复杂表格填写，在前进、后退过程中保持之前填写的内容。&lt;/p&gt;

&lt;p&gt;在&lt;a href=&quot;http://react-china.org/t/react-router-hashhistory-browserhistory/6799/4&quot;&gt;【react-router】hashhistory 与 browserhistory有什么区别&lt;/a&gt;中有简单设置以去掉&lt;code&gt;_k=abc123&lt;/code&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import { createHashHistory } from &#39;history&#39;;

const appHistory = useRouterHistory(createHashHistory)({ queryKey: false });

ReactDOM.render(
  &amp;lt;Router history={appHistory}&amp;gt;
    {routes}
  &amp;lt;/Router&amp;gt;,
  document.getElementById(&#39;app&#39;)
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;问题：无法使用state保持页面状态，无法使用state来渲染链接对应页面，如&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const path = {
  pathname: &#39;business/BaiduSearch/update&#39;,
  state: { id: record.id } 
}
&amp;lt;Link to={path}&amp;gt;修改&amp;lt;/Link&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;browserhistory&quot;&gt;使用browserHistory&lt;/h1&gt;
&lt;p&gt;在一些框架、库提供的糖面前，我倾向于不使用改变更广泛的标准的做法。如上面通过使用hashHistory和queryKey来获取state来渲染页面的方法，我更倾向于使用&lt;code&gt;http://example.com/the/path?the=query&amp;amp;id=recordId&lt;/code&gt;的方式获取相关信息渲染页面，这样在分享链接时也更为方便。&lt;/p&gt;

&lt;h2 id=&quot;browserhistory-1&quot;&gt;创建browserHistory&lt;/h2&gt;
&lt;p&gt;本来可以直接使用&lt;code&gt;react-router&lt;/code&gt;提供的&lt;code&gt;browserHistory&lt;/code&gt;，但考虑到该项目对应的域名为&lt;code&gt;xxx.xxx.com/xx&lt;/code&gt;，而且本地开发环境使用localhost:port访问，所以引入&lt;a href=&quot;https://www.npmjs.com/package/history&quot;&gt;history&lt;/a&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;import {createHistory} from &#39;history&#39;
import {
  Router,
  Route,
  useRouterHistory
}
const browserHistory = useRouterHistory(createHistory)({basename: process.env.NODE_ENV === &#39;production&#39;? &#39;/xx&#39;: &#39;&#39;})
const routes = (
  &amp;lt;Router history={browserHistory}&amp;gt;
  ...
  &amp;lt;/Router&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;同时，需要修改对应的web容器配置，使其知道/xx/下的所有uri路由到单页面应用。目前使用的nginx。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;location /xx/ {
    try_files $uri /xx/index.html;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;state&quot;&gt;state&lt;/h2&gt;
&lt;p&gt;目前state的作用主要是提供了保持页面状态的功能，包括相关的存取功能。这部分功能可以使用很多方式实现，如history的location.state，cookie，甚至是引入redux等。&lt;/p&gt;
</description>
        <pubDate>Sun, 31 Jul 2016 00:00:00 +0800</pubDate>
        <link>http://techctu.github.io//2016/07/31/react-router%E4%BB%8Ehashhistory%E5%88%B0browserhistory.html</link>
        <guid isPermaLink="true">http://techctu.github.io//2016/07/31/react-router%E4%BB%8Ehashhistory%E5%88%B0browserhistory.html</guid>
        
        <category>react-router</category>
        
        <category>react</category>
        
        
      </item>
    
      <item>
        <title>前端重构第一次尝试后思路整理</title>
        <description>&lt;p&gt;最近做了一个项目的前端开发，上线了，然而怎么看都是一个玩具一般的东西，需要一次强力升级。前段时间也看了很多博客，翻了很多文档，对项目进行了一次小小的外科手术，但随着了解深入，收获的知识越来越多，接触到的问题也越来越多。道高一尺魔高一丈，也许也能这样解释？得整理一下思路，降服一下心魔了。&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;目前项目状态&lt;/h1&gt;
&lt;p&gt;初始状态：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;参考之前jQuery + Velocity年代，目录分为css、scripts、img，scripts下分为pages和util。&lt;/li&gt;
  &lt;li&gt;项目较小，为嵌入APP webview中的H5项目，css放入一个统一的css文件中。&lt;/li&gt;
  &lt;li&gt;引入react、react-router。&lt;/li&gt;
  &lt;li&gt;使用webpack打包，只输出bundle.js到asset目录下，bundle.js和css文件直接在index.html中引用。&lt;/li&gt;
  &lt;li&gt;图片和css样式在react组件中直接以&lt;code&gt;className=&quot;class-a class-b&quot;&lt;/code&gt;和&lt;code&gt;&amp;lt;img src=&quot;../../img/a/png&quot; /&amp;gt;&lt;/code&gt;的方式使用。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一个这样的项目，怎么就这样上线了？除了在生产打包使用了&lt;code&gt;webpack.optimize.UglifyJsPlugin&lt;/code&gt;这种打包压缩js之外，看不到现代前端工程的痕迹。虽然是个小项目，可以不那么重视性能，但连gzip都没有开是怎么回事？一个400多k的bundle.js在webview中请求并加载运行的速度完全不能接受。而且这个项目可能要作为模板在其他项目中使用。作为一个有代码和工程洁癖的人，怎么能忍受这样的事情？&lt;/p&gt;

&lt;p&gt;然后有了之前的&lt;a href=&quot;/2016/07/11/%E5%89%8D%E7%AB%AF%E9%87%8D%E6%9E%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%B0%9D%E8%AF%95.html&quot;&gt;进阶修改&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;此时，了解的知识和碰到的问题越来越多，如&lt;a href=&quot;https://csspod.com/frontend-performance-best-practices/&quot;&gt;前端性能优化最佳实践&lt;/a&gt;，&lt;a href=&quot;https://github.com/fouber/blog&quot;&gt;某技术总监的前端博文&lt;/a&gt;等；也发现了不少帮助解决前端工程问题的工具，如&lt;a href=&quot;http://fis.baidu.com/&quot;&gt;fis3@Baidu-FEX-team&lt;/a&gt;，&lt;a href=&quot;http://yeoman.io/&quot;&gt;yo@Google-Yeoman-team&lt;/a&gt;。已经有不少前辈趟过雷踩过坑，很多文章都很精彩，但并不一定适合我所在team的环境。也许，需要针对我厂特点进行一个定制了。&lt;/p&gt;

&lt;h1 id=&quot;section-1&quot;&gt;需求分析&lt;/h1&gt;
&lt;p&gt;现有环境：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;苛刻的资源权限管理：生产环境、代码资源、测试环境、外网环境等申请困难重重。&lt;/li&gt;
  &lt;li&gt;内网环境开发和部署，可以支持代理上npm。&lt;/li&gt;
  &lt;li&gt;代码版本管理可能使用TFS/SVN/Git等多种版本管理工具，目前使用TFS。&lt;/li&gt;
  &lt;li&gt;前端开发人员前端开发技能熟练度不高，对JQuery系不很熟练的程度，更不用说es6、react、组件化。&lt;/li&gt;
  &lt;li&gt;打包部署流程有待考察。&lt;/li&gt;
  &lt;li&gt;不一定适用CDN，目标运行环境主要为移动设备，包括手机、平板、笔记本。&lt;/li&gt;
  &lt;li&gt;目前为粗暴缩放，缺乏精细多屏适配设计与实现。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;需求：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;开发规范&lt;/strong&gt;：基于es6、react、webpack开发，要有开发规范，快速定位开发问题，提高开发效率。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;模块化/组件化&lt;/strong&gt;：有自己的模块/组件仓库，解决命名空间、组件独立、依赖管理、按需加载执行、安全合并等问题，区分开业务相关和业务无关的模块和组件。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;react技术&lt;/strong&gt;：使用react作为UI组件，使用react-router管理前端路由，使用redux管理前端状态，状态数据结构必须immutable。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;性能优化&lt;/strong&gt;：通过工程化方法进行性能优化，包括加速首屏加载，图片压缩合并，CSS Sprite，Base64图片，缓存和缓存更新，性能提升统计评估等。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;项目部署&lt;/strong&gt;：开发资源组织规则和部署资源组织规则分离，支持动静分离、静态资源缓存、CDN、非覆盖式发布等。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;开发流程&lt;/strong&gt;：内网环境开发，支持通过代理访问外网npm，代码托管在内网windows server TFS上，构建也位于windows server，可以通过代理访问外网npm，生产构建位于windows。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;开发工具&lt;/strong&gt;：内网开发，编辑器、IDE、构建与优化工具、开发-调试-部署等流程工具，以及组件库获取、提交等相关工具，甚至运营、文档、配置发布等平台工具。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;协作流程&lt;/strong&gt;：业务提交需求，厂商提供UEUI和静态页面，组内开发人员根据静态页面编写react页面。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;后台&lt;/strong&gt;：目前使用Java SpringMVC，动态请求发送POST到Controller，Service层使用Dubbo。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;其他&lt;/strong&gt;：待发掘。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;分析：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;对于第1点，前期的改造基本完成。&lt;/li&gt;
  &lt;li&gt;第2、3点需要修改目录结构，提供samples。&lt;/li&gt;
  &lt;li&gt;第4点目前已经使用了缓存、hash、gzip压缩、base64等技术，Java环境下的react首页直出有待研究。&lt;/li&gt;
  &lt;li&gt;第5、6点和本厂大环境相关，只考虑开发和打包过程，从代码仓库抽取到打包环境和打包环境到生产部署的过程和工具暂不考虑。&lt;/li&gt;
  &lt;li&gt;第7点已经编写了内网环境下搭建基于sublime的开发环境的教程。&lt;/li&gt;
  &lt;li&gt;第8点主要在于本组静态页面开发能力较弱，需要长期培养。&lt;/li&gt;
  &lt;li&gt;第9点主要用于考虑后期使用node替换SpringMVC使web前后端同构，java只负责服务层。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;所以目前主要考虑的应该是，静态资源开发和组织的工程化，在&lt;a href=&quot;/2016/07/11/%E5%89%8D%E7%AB%AF%E9%87%8D%E6%9E%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%B0%9D%E8%AF%95.html&quot;&gt;进阶修改&lt;/a&gt;的基础上引入redux及其相关技术，进一步组件化，构建自己的组件仓库，提供samples等。可以先研究&lt;a href=&quot;http://yeoman.io/&quot;&gt;yeoman&lt;/a&gt;这样的构造工具。国内fis3这样的工具不像yeoman这样透明直观，使用时对其机理存疑。&lt;/p&gt;
</description>
        <pubDate>Thu, 14 Jul 2016 00:00:00 +0800</pubDate>
        <link>http://techctu.github.io//2016/07/14/%E5%89%8D%E7%AB%AF%E9%87%8D%E6%9E%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%B0%9D%E8%AF%95%E5%90%8E%E6%80%9D%E8%B7%AF%E6%95%B4%E7%90%86.html</link>
        <guid isPermaLink="true">http://techctu.github.io//2016/07/14/%E5%89%8D%E7%AB%AF%E9%87%8D%E6%9E%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%B0%9D%E8%AF%95%E5%90%8E%E6%80%9D%E8%B7%AF%E6%95%B4%E7%90%86.html</guid>
        
        <category>react</category>
        
        <category>webpack</category>
        
        
      </item>
    
      <item>
        <title>前端重构第一次尝试</title>
        <description>&lt;p&gt;前段时间自行吐槽了自己参与大部分工作的前端项目，慢慢学习前端工作流到现在，并尝试了重构，记录一下。&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;配置管理&lt;/h1&gt;
&lt;p&gt;首先，把和环境相关的配置提取出来，使用webpack.DefinePlugin，避免每次部署时开发环境、测试环境、生产环境的变量手动修改。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/* 定义运行环境相关变量 */
var SITE_STATIC_PREFIX = &#39;/yh-wifi-web/&#39;;
/* ... */

module.exports = {
  plugins: [
    new webpack.DefinePlugin({
      SITE_STATIC_PREFIX: JSON.stringify(SITE_STATIC_PREFIX),
      SITE_DYNAMIC_PREFIX:JSON.stringify(SITE_DYNAMIC_PREFIX)
    })
  ]
}；
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;section-1&quot;&gt;资源管理&lt;/h1&gt;
&lt;p&gt;然后，把css和图片等资源文件从在index.html里直接饮用挪到js中引用，以便将静态资源文件纳入管理，解决热部署问题（&lt;a href=&quot;http://zhihu.com/question/20790576/answer/32602154&quot;&gt;大公司里怎样开发和部署前端代码？ - 回答作者: 张云龙&lt;/a&gt;）。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/* 引用静态资源 */
import zoneMomImage from &#39;../../../image/mom.png&#39;;
import styles from &#39;../../../css/app.css&#39;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在webpack配置中添加对应loader。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;/* 在webpack配置中添加对应loader */
module.exports = {
  module: {
    loaders: [{
      test: /\.css$/,
      loader: loaders: [&#39;style?sourceMap&#39;, &#39;css?modules&amp;amp;camelCase&amp;amp;sourceMap&#39;],
      include: path.join(__dirname, &#39;css&#39;)
    }, {
      test: /\.(png|jpg|gif|svg)$/,
      loaders: [&#39;url?limit=8192&#39;],
      include: path.join(__dirname, &#39;image&#39;)
    }]
  }
}；
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样，就可以在react中使用css module。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;.sample-camel{
  color: red;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在react中引用之后，可以使用对应变量表示样式&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;render(
  return &amp;lt;div className={styles.sampleCamel} /&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然而，考虑到现在的前端开发流程，UE-&amp;gt;UI-&amp;gt;HTML+CSS-&amp;gt;react组件，以及现有项目的修改难度，引入了&lt;a href=&quot;https://github.com/gajus/react-css-modules&quot;&gt;react-css-modules&lt;/a&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// ComponentSample.js
import CSSModules from &#39;react-css-modules&#39;;
// 修改className为styleName
render(
  return &amp;lt;div styleName=&quot;sample-camel&quot; /&amp;gt;
)
// 装饰组件
export default CSSModules(ComponentSample, styles, {allowMultiple:true});
// webpack配置
module.exports = {
  module: {
    loaders: [{
      test: /\.css$/,
      loader: loaders: [&#39;style?sourceMap&#39;, &#39;css?modules&amp;amp;importLoaders=1&amp;amp;localIdentName=[path]__[name]__[local]__[hash:base64:5]&#39;],
      include: path.join(__dirname, &#39;css&#39;)
    }, {
      test: /\.(png|jpg|gif|svg)$/,
      loaders: [&#39;url?limit=8192&#39;],
      include: path.join(__dirname, &#39;image&#39;)
    }]
  }
}；
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样，不论是现有项目修改还是新项目从静态页面到react，都更为方便。&lt;/p&gt;

&lt;p&gt;最后修改在生产环境的webpack配置。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;module.exports = {
  output: {
    path: path.join(__dirname, &#39;asset&#39;),
    filename: &#39;[name].[chunkhash].js&#39;,
    publicPath: &#39;/&#39;
  },
  resolve: {
    extensions: [&#39;&#39;, &#39;.js&#39;]
  },
  devtool: false,
  plugins: [
    new webpack.optimize.OccurenceOrderPlugin(),
    new webpack.DefinePlugin({
      &#39;process.env&#39;: {
        &#39;NODE_ENV&#39;: JSON.stringify(&#39;production&#39;)
      }
    }),
    new webpack.optimize.DedupePlugin(),
    new webpack.optimize.UglifyJsPlugin({
      compress: {
        warnings: false
      }
    }),
    new webpack.DefinePlugin({
      SITE_STATIC_PREFIX: JSON.stringify(SITE_STATIC_PREFIX),
      SITE_DYNAMIC_PREFIX:JSON.stringify(SITE_DYNAMIC_PREFIX)
    }),
    new ExtractTextPlugin(&#39;[name].[chunkhash].css&#39;, {allChunks:true}),
    new HtmlWebpackPlugin({
      template:&#39;scripts/index.ejs&#39;,
      minify:{
        removeComments: true,
        collapseWhitespace: true,
        removeRedundantAttributes: true,
        useShortDoctype: true,
        removeEmptyAttributes: true,
        removeStyleLinkTypeAttributes: true,
        keepClosingSlash: true,
        minifyJS: true,
        minifyCSS: true,
        minifyURL: true
      },
      inject:true
    })
  ],
  module: {
    loaders: [{test: /.jsx?$/,loaders: [&#39;babel&#39;],include: path.join(__dirname, &#39;scripts&#39;)}, {test: /.js?$/,loaders: [&#39;babel&#39;],include: path.join(__dirname, &#39;scripts&#39;)}, {test: /.css$/,loader: ExtractTextPlugin.extract(&#39;style&#39;, &#39;css?modules&amp;amp;importLoaders=1&amp;amp;localIdentName=[path]__[name]__[local]__[hash:base64:5]&#39;),include: path.join(__dirname, &#39;css&#39;)}, {test: /.(png|jpg|gif|svg)$/,loaders: [&#39;url?limit=8192&#39;, &#39;image-webpack?bypassOnDebug&amp;amp;optimizationLevel=7&amp;amp;interlaced=false&#39;],include: path.join(__dirname, &#39;image&#39;)}]
  }
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中尝试加入&lt;a href=&quot;https://github.com/tcoopman/image-webpack-loader&quot;&gt;图片压缩&lt;/a&gt;，但在windows环境下imagemin依赖的库会出现问题，目前没有解决方案，只能考虑在其他步骤中进行处理。&lt;/p&gt;

&lt;h1 id=&quot;section-2&quot;&gt;代码规范&lt;/h1&gt;
&lt;p&gt;按照以下进行了代码重写。
1. 重申命名规范，组件/页面单独文件夹，文件夹下index.js作为默认导出，使用到的多个组件在文件夹内创建[ComponentName.js]来引用。
2. 按照要求将react-router的hashHistory替换为browserHistory，在上面的修改完成后，由于使用browserHistory导致的资源路径问题也同步解决了。&lt;/p&gt;
</description>
        <pubDate>Mon, 11 Jul 2016 00:00:00 +0800</pubDate>
        <link>http://techctu.github.io//2016/07/11/%E5%89%8D%E7%AB%AF%E9%87%8D%E6%9E%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%B0%9D%E8%AF%95.html</link>
        <guid isPermaLink="true">http://techctu.github.io//2016/07/11/%E5%89%8D%E7%AB%AF%E9%87%8D%E6%9E%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%B0%9D%E8%AF%95.html</guid>
        
        <category>react</category>
        
        <category>webpack</category>
        
        
      </item>
    
      <item>
        <title>使用esformat和其plugin来格式化es6及react代码</title>
        <description>&lt;ol&gt;
  &lt;li&gt;使用sublime esfomatter插件。&lt;/li&gt;
  &lt;li&gt;如eslint一样，配置.esformatter，添加esformatter和esformatter插件为项目依赖。&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sat, 02 Jul 2016 00:00:00 +0800</pubDate>
        <link>http://techctu.github.io//2016/07/02/%E4%BD%BF%E7%94%A8esformat%E5%92%8C%E5%85%B6plugin%E6%9D%A5%E6%A0%BC%E5%BC%8F%E5%8C%96es6%E5%8F%8Areact%E4%BB%A3%E7%A0%81.html</link>
        <guid isPermaLink="true">http://techctu.github.io//2016/07/02/%E4%BD%BF%E7%94%A8esformat%E5%92%8C%E5%85%B6plugin%E6%9D%A5%E6%A0%BC%E5%BC%8F%E5%8C%96es6%E5%8F%8Areact%E4%BB%A3%E7%A0%81.html</guid>
        
        <category>es6</category>
        
        <category>format</category>
        
        <category>react</category>
        
        <category>esformat</category>
        
        
      </item>
    
      <item>
        <title>内网配置SublimeLinter和SublimeLinter-contrib-eslint来检查es6 react代码</title>
        <description>&lt;p&gt;最近一直在做前端技术积累相关方面的事情，其中一项就是要起草一个前端规范。我觉得一切只要求人自觉做到而不提供规范化工具的规范都是耍流氓。参考现在项目使用的为react和es6，以及sublime，我找到了几个有用的东西：
- &lt;a href=&quot;http://eslint.org/&quot;&gt;eslint&lt;/a&gt;
- &lt;a href=&quot;https://github.com/yannickcr/eslint-plugin-react&quot;&gt;eslint-plugin-react&lt;/a&gt;
- &lt;a href=&quot;https://github.com/benmosher/eslint-plugin-import&quot;&gt;eslint-plugin-import&lt;/a&gt;
- &lt;a href=&quot;http://sublimelinter.readthedocs.io/&quot;&gt;SublimeLinter&lt;/a&gt;
- &lt;a href=&quot;https://github.com/roadhump/SublimeLinter-eslint&quot;&gt;SublimeLinter-eslint&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;他们的关系是：
1. eslint检查代码是否符合规范，使用eslint-plugin-react和eslint-plugin-import来检查es6 react语法。eslint已经支持es6，不需要使用babel-eslint。
2. SublimeLinter是连接SublimeLinter-xlint的框架型sublime插件，将检查结果等在sublime中显示。
3. SublimeLinter-eslint使用eslint的基于SublimeLinter的插件。SublimeLinter检测到配置的需要检查的文件，调用配置的lint，如SublimeLinter-eslint来检查。而SublimeLinter-eslint则使用eslint加载配置的规则来检查代码。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;安装步骤&lt;/h2&gt;
&lt;p&gt;前置条件：配置了npm代理可以使用npm安装。&lt;/p&gt;

&lt;p&gt;在项目下运行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install eslint eslint-plugin-react eslint-plugin-import --save-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解压下载的&lt;a href=&quot;https://github.com/SublimeLinter/SublimeLinter3/archive/master.zip&quot;&gt;SublimeLinter&lt;/a&gt;和&lt;a href=&quot;https://github.com/roadhump/SublimeLinter-eslint/archive/master.zip&quot;&gt;SublimeLinter-eslint&lt;/a&gt;到sublime的&lt;code&gt;Packages&lt;/code&gt;目录下，SublimeLinter的文件夹必须修改为&lt;code&gt;SublimeLinter&lt;/code&gt;，否则SublimeLinter-eslint找不到SublimeLinter。&lt;/p&gt;

&lt;p&gt;（这一步只需要项目创建者执行一次）在项目下配置.eslintrc，或者直接运行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./node_modules/.bin/eslint --init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以得到一个基础的校验规则配置。可以参考这个&lt;a href=&quot;https://github.com/coryhouse/react-slingshot/blob/master/.eslintrc&quot;&gt;starter kit&lt;/a&gt;的配置&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;extends&quot;: [
    &quot;eslint:recommended&quot;,
    &quot;plugin:import/errors&quot;,
    &quot;plugin:import/warnings&quot;
  ],
  &quot;plugins&quot;: [
    &quot;react&quot;
  ],
  &quot;parserOptions&quot;: {
    &quot;ecmaVersion&quot;: 6,
    &quot;sourceType&quot;: &quot;module&quot;,
    &quot;ecmaFeatures&quot;: {
      &quot;jsx&quot;: true,
      &quot;experimentalObjectRestSpread&quot;: true
    }
  },
  &quot;env&quot;: {
    &quot;es6&quot;: true,
    &quot;browser&quot;: true,
    &quot;node&quot;: true,
    &quot;jquery&quot;: true,
    &quot;mocha&quot;: true
  },
  &quot;rules&quot;: {
    &quot;quotes&quot;: 0,
    &quot;no-console&quot;: 1,
    &quot;no-debugger&quot;: 1,
    &quot;no-var&quot;: 1,
    &quot;semi&quot;: [1, &quot;always&quot;],
    &quot;no-trailing-spaces&quot;: 0,
    &quot;eol-last&quot;: 0,
    &quot;no-underscore-dangle&quot;: 0,
    &quot;no-alert&quot;: 0,
    &quot;no-lone-blocks&quot;: 0,
    &quot;jsx-quotes&quot;: 1,
    &quot;react/display-name&quot;: [ 1, {&quot;ignoreTranspilerName&quot;: false }],
    &quot;react/forbid-prop-types&quot;: [1, {&quot;forbid&quot;: [&quot;any&quot;]}],
    &quot;react/jsx-boolean-value&quot;: 0,
    &quot;react/jsx-closing-bracket-location&quot;: 0,
    &quot;react/jsx-curly-spacing&quot;: 1,
    &quot;react/jsx-indent-props&quot;: 0,
    &quot;react/jsx-key&quot;: 1,
    &quot;react/jsx-max-props-per-line&quot;: 0,
    &quot;react/jsx-no-bind&quot;: 0,
    &quot;react/jsx-no-duplicate-props&quot;: 1,
    &quot;react/jsx-no-literals&quot;: 0,
    &quot;react/jsx-no-undef&quot;: 1,
    &quot;react/jsx-pascal-case&quot;: 1,
    &quot;react/jsx-sort-prop-types&quot;: 0,
    &quot;react/jsx-sort-props&quot;: 0,
    &quot;react/jsx-uses-react&quot;: 1,
    &quot;react/jsx-uses-vars&quot;: 1,
    &quot;react/no-danger&quot;: 1,
    &quot;react/no-did-mount-set-state&quot;: 1,
    &quot;react/no-did-update-set-state&quot;: 1,
    &quot;react/no-direct-mutation-state&quot;: 1,
    &quot;react/no-multi-comp&quot;: 1,
    &quot;react/no-set-state&quot;: 1,
    &quot;react/no-unknown-property&quot;: 1,
    &quot;react/prefer-es6-class&quot;: 1,
    &quot;react/prop-types&quot;: 1,
    &quot;react/react-in-jsx-scope&quot;: 1,
    &quot;react/require-extension&quot;: 1,
    &quot;react/self-closing-comp&quot;: 1,
    &quot;react/sort-comp&quot;: 1,
    &quot;react/wrap-multilines&quot;: 1
  },
  &quot;globals&quot;: {
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;也可以参考&lt;a href=&quot;https://github.com/yuche/javascript&quot;&gt;airbnb&lt;/a&gt;配置或者自行配置。&lt;/p&gt;

&lt;p&gt;打开sublime顶部&lt;code&gt;Tools -&amp;gt; SublimeLinter -&amp;gt; Lint mode&lt;/code&gt;，选择自己喜欢的检查时机。
- Background: 准实时提示。
- Load/save：打开/保存文件时。
- Save only：保存时。
- Manual：手动。请去&lt;code&gt;Preferences -&amp;gt; Package Settings -&amp;gt; SublimeLinter -&amp;gt; Key Bindings - Default&lt;/code&gt;查看快捷键设置，建议在&lt;code&gt;Key Bindings - User&lt;/code&gt;里设置自定义快捷键。&lt;/p&gt;

&lt;p&gt;至此，可以发现自己ugly代码左侧行号附近出现了提示，且在行内会有方框标识，且在sublime底部会有提示原因。如果觉得不方便查看，可以设置&lt;code&gt;Tools -&amp;gt; SublimeLinter -&amp;gt; Debug mode&lt;/code&gt;，使用&lt;code&gt;ctrl + `&lt;/code&gt;调出控制台来查看信息。&lt;/p&gt;

&lt;p&gt;TODO：暂时没有具体研究每一项配置。&lt;/p&gt;

&lt;p&gt;参考文章：
- &lt;a href=&quot;http://devnull.guru/get-started-with-eslint/&quot;&gt;Get Started with ESLint v1.0&lt;/a&gt;
- &lt;a href=&quot;https://github.com/airbnb/javascript&quot;&gt;Airbnb JavaScript Style Guide&lt;/a&gt;
- &lt;a href=&quot;https://github.com/airbnb/javascript/tree/master/react&quot;&gt;Airbnb React/JSX Style Guide&lt;/a&gt;
- &lt;a href=&quot;https://github.com/minwe/style-guide/blob/master/React.js.md&quot;&gt;React/JSX 编码规范&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 30 Jun 2016 00:00:00 +0800</pubDate>
        <link>http://techctu.github.io//2016/06/30/%E5%86%85%E7%BD%91%E9%85%8D%E7%BD%AEsublimelinter%E5%92%8Csublimelinter-contrib-eslint%E6%9D%A5%E6%A3%80%E6%9F%A5es6-react%E4%BB%A3%E7%A0%81.html</link>
        <guid isPermaLink="true">http://techctu.github.io//2016/06/30/%E5%86%85%E7%BD%91%E9%85%8D%E7%BD%AEsublimelinter%E5%92%8Csublimelinter-contrib-eslint%E6%9D%A5%E6%A3%80%E6%9F%A5es6-react%E4%BB%A3%E7%A0%81.html</guid>
        
        <category>react</category>
        
        <category>es6</category>
        
        <category>lint</category>
        
        <category>eslint</category>
        
        
      </item>
    
      <item>
        <title>阶段性前端开发项目待解决问题总结</title>
        <description>&lt;p&gt;最近项目即将上线，终于有时间回顾这个以基于第三方框架制作的APP的webview为基础环境的webpack-react项目了。&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;待解决的问题&lt;/h1&gt;
&lt;p&gt;## 配置管理
开始使用webpack时对其不了解，也没有进行过开发环境、各个测试环境和生产环境方面的配置，对这方面不太了解，一些在不同环境下应该进行不同配置的全局变量需要在各个环境手动修改。该部分应该通过webpack的&lt;a href=&quot;http://webpack.github.io/docs/list-of-plugins.html#defineplugin&quot;&gt;DefinePlugin&lt;/a&gt;进行设置，如&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;webpack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DefinePlugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;5fa3b9&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;BROWSER_SUPPORTS_HTML5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;TWO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1+1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;typeof window&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;object&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;同时对于入口文件html引用的路径，使用模板的方式，如html-webpack-plugin来处理，以在不同环境下进行不同的配置。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;三方库管理&lt;/h2&gt;
&lt;p&gt;在目前的实现中，为了实现安卓的物理键功能，在入口页面html文件中引用了几个第三方js库。这些第三方库在js中也重复引入了，仅仅因为JS压缩等原因无法复用。&lt;/p&gt;

&lt;p&gt;可以通过webpack的CommonsChunkPlugin将公共JS提取为公共文件以复用。同时配合html-webpack-plugin来解决物理键功能的问题。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;组件化&lt;/h2&gt;
&lt;p&gt;目前的站点在实现上，依然采用之前的目录结构，没有采用组件化的目录结构来开发。具体表现在将原来的html页面简单映射为react的一个js文件（一个component），其对应一个react-router的route。具体在页面内部，无法复用组件。如标签页、导航等。&lt;/p&gt;

&lt;p&gt;这部分必须参考现有的优秀的react组件，区分出单个组件和框架的区别。哪些可以作为组件单独封装，哪些部分或功能封装成组件可能会影响页面其他部分，必须仔细斟酌，形成一个标准。&lt;/p&gt;

&lt;p&gt;目前比较优秀的组件主要有react-modal、react-swipe等。至于一些很容易在百度上搜到的国内的知名组件库，如amaze ui react，或是ant design的&lt;a href=&quot;https://github.com/react-component&quot;&gt;react component&lt;/a&gt;，其组件质量良莠不齐，部分组件容易出现上述的影响页面其他部分的问题。不过最近看似乎amaze ui项目来了个新的技术主管的样子，新出的react组件质量好像高了不少。&lt;/p&gt;

&lt;p&gt;在这个项目里，标准化是一个比较复杂的问题，只因为这是一个奇怪的hybird模式。&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;性能优化&lt;/h2&gt;
&lt;p&gt;找到了一个非常好的&lt;a href=&quot;https://csspod.com/frontend-performance-best-practices/&quot;&gt;总结和TODOs的文章&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 22 Jun 2016 00:00:00 +0800</pubDate>
        <link>http://techctu.github.io//web/2016/06/22/%E9%98%B6%E6%AE%B5%E6%80%A7%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE%E5%BE%85%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93.html</link>
        <guid isPermaLink="true">http://techctu.github.io//web/2016/06/22/%E9%98%B6%E6%AE%B5%E6%80%A7%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE%E5%BE%85%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93.html</guid>
        
        <category>webpack</category>
        
        <category>hybird</category>
        
        <category>react</category>
        
        <category>前端优化</category>
        
        
        <category>web</category>
        
      </item>
    
      <item>
        <title>React开发入门指南</title>
        <description>&lt;p&gt;&lt;em&gt;用Jekyll和Markdown写的，使用的pygment的代码高亮没有调整，react相关代码会出现红框，无视就好，懒癌发作暂时不想研究。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;代码是示例，仅作为参考。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;不知不觉写了很多东西，有点杂，见谅。&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;reacthttpfacebookgithubioreactdocsgetting-startedhtml&quot;&gt;&lt;a href=&quot;http://facebook.github.io/react/docs/getting-started.html&quot;&gt;React&lt;/a&gt;是什么&lt;/h1&gt;
&lt;p&gt;React是基于JavaScript的，状态驱动的，操作虚拟DOM的UI框架。使用该框架有很多好处，对我来说，核心是将对DOM的操作隔离开，让开发人员专注于业务流程和状态。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;与传统开发比较&lt;/h2&gt;
&lt;p&gt;在传统的前端页面开发中，我们一般会给一个标签设置一个id或是类似的东西，以便对其进行操作，如：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;id_xxx&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;这是一个标签&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/div&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 纯JS&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementByID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;id_xxx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// JQuery&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#id_xxx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 再去操作&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;而在React中，一般这么做：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// import省略&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 为了比较完整展现一下结构，比上面偷懒写的代码多了很多&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ComponentA&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;stateTag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 进行一些预处理操作&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stateTag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;这是一个标签&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;这不是一个标签&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arrayInfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;arrayInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/div&amp;gt;)))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/div&amp;gt;&amp;lt;/div&amp;gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这样我们只需要关注什么样的场景下需要进行title值的修改，不需要关注ID之类的维护亦或一些复杂繁琐的DOM操作。想象一下如果是一个复杂的多级下拉选择框，选完了之后对应的列表需要进行自动更新。&lt;/p&gt;

&lt;h2 id=&quot;react&quot;&gt;React结构入门&lt;/h2&gt;
&lt;p&gt;以上面的代码为例。Java从接触的时候的1.5发展到了1.8，多了很多并行运算、模板、闭包、线程安全等新特性，Python也不是一成不变，JavaScript也发展到了es6，es7正在路上。上面的代码，是基于es6。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 和大部分语音一致，引用依赖包/库，如Java、Python的import，C系列的include等&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 定义一个React组件&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 如果做过其他胖客户端的开发的话，类似Android、VB、C#等，extend View&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ComponentA&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 非常熟悉的面向对象的概念中的构造函数&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// props即使用ComponentA时传入的初始化参数&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 设置该组件构造时的状态&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;stateTag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 初始化完成开始渲染DOM，React在这里计算需要修改哪些DOM节点并进行更新&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// es6的关键字，不再使用var，var的作用域不好控制&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// let声明变量，const声明常量&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stateTag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;这是一个标签&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;这不是一个标签&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arrayInfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// forEach为es6中的数组遍历&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// (param)=&amp;gt;(expression(param))为新的操作符，param为形参，表示对param立刻执行expression(param)&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// (v,i)是forEach的可变形参列表，可以为1-3个参数，分别是数组项值、下表、数组引用&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 都是语法糖，整个含义就是遍历数组，对于每个数组项执行一个操作&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;arrayInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/div&amp;gt;)))&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// return中写静态页面，HTML。需要注意的主要有三点：&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// html关键字class修改为className&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// style通过对象传入，带有“-”的修改为驼峰命名，如style=&amp;quot;padding-top:1rem&amp;quot;修改为style=&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 列表需要加入唯一key，如key = {列表名 + 页号 + 下标}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/div&amp;gt;&amp;lt;/div&amp;gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 使用方式如下，传入一个对象到init属性，在ComponentA中通过this.props.init访问&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ComponentA&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;section-1&quot;&gt;常用声明周期函数&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// render之前调用&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;componentWillMount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 修改state&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// render之后调用&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;componentDidMount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 发送异步请求&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 销毁之前调用&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;componentWillUnmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 清理定时器、中断请求等&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;更多详情参考&lt;a href=&quot;http://www.ruanyifeng.com/blog/2015/03/react.html&quot;&gt;阮一峰的React介绍（es5版代码）&lt;/a&gt;&lt;a href=&quot;http://facebook.github.io/react/docs/getting-started.html&quot;&gt;或者官网（还是es5）&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;注：&lt;/em&gt;阮一峰的博客是15年3月写的，部分内容react可能更新后取消了。比如不再使用JSX，拥抱es6。&lt;/p&gt;

&lt;h2 id=&quot;react-1&quot;&gt;像React一样思考&lt;/h2&gt;
&lt;p&gt;React中，props和state是很容易混淆的。什么时候使用props？什么时候使用state？哪些需要在组件内部的state进行管理？都是设计到组件设计的问题。&lt;/p&gt;

&lt;p&gt;React最佳实践中，将UI组件分为两种：纯展示类组件和业务类组件。其中，纯展示类组件只负责展示，没有自己的state，如：使用宽a高b位置多少的页面空间展示一种来源为xxx的图片。而父组件负责处理组件状态，如由图片、剪头、分页等组成的轮播图组件，负责处理显示哪张图片，点击的回调是什么，什么时候切换图片，是否可以滑动等。&lt;/p&gt;

&lt;p&gt;那么，一个基于react的web app可能就是这样：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;// 入口index.
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;入口&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;...app.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// app.js&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ComponentA&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//  初始化&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 注入子组件进行调用更新父组件状态&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;updateState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 许多状态和cases，以判定页面应该显示成什么样，拼装对应的组件，之后填充到页面&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;componentArrayA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;componentArrayA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ComponentX&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callbackFunction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;updateState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/ComponentX&amp;gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;componentArrayA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;很快，就会出现几个问题：
1. 浏览器里我复制链接，我可以在新的浏览器里粘贴就可以打开对应页面，如果没有登录跳到登录页，使用react如何做到？
2. 使用react，页面一多，状态的维护难度会不会爆炸？&lt;/p&gt;

&lt;p&gt;要解决这些问题，需要引入新的框架。&lt;/p&gt;

&lt;h1 id=&quot;section-2&quot;&gt;相关知识技术&lt;/h1&gt;
&lt;p&gt;## &lt;a href=&quot;https://github.com/reactjs/react-router&quot;&gt;React-router&lt;/a&gt;
第一个问题，其实是路由方面的问题。&lt;/p&gt;

&lt;p&gt;在以前接触的Java前端网页开发中，我们是通过Spring-MVC来进行一些基础路由设置，然后将路由处理映射到Controller，在Controller中处理请求并返回对应页面。其中，在请求到Controller之前，会通过一些filter进行处理，比如shiro来进行权限验证（登录与否等）。这样就需要引入react-router。&lt;/p&gt;

&lt;p&gt;react-router是一个前端路由框架，监听浏览器的url请求，并进行相应的处理。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Router&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;history=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{hashHistory}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Route&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;component=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{Home}&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;onEnter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{function(){&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(&amp;#39;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;g-header-line&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;height =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;0px&amp;#39;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;/*&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Home&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;页面需要进行特殊处理*/&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;TRUE =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;pushPageTrace&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;escape&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(&amp;#39;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;http:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;web2native&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;channel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;goto_xhtml*path=login/xhtml/unlogin_menu_location.xhtml&amp;#39;))&lt;/span&gt;
      &lt;span class=&quot;err&quot;&gt;}}&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;onLeave=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{function(){&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;parser =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;UAParser&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;result =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;parser.getResult();&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name =&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;iOS&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(&amp;#39;.&amp;#39;))&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; 6) {
            height = 20 * (document.documentElement.clientWidth / 320);
          }
        }
        document.getElementById(&amp;#39;g-header-line&amp;#39;).style.height = height + &amp;#39;px&amp;#39;;
      }}/&amp;gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Router&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;hashHistory用的是react-router提供的基于浏览器自带history制作的history.js的一个历史记录数据结构，使用的是http://xxx/#/xxx?hash=xxx的形式。&lt;/p&gt;

&lt;Route /&gt;
&lt;p&gt;标签中path即#/path，component即自己写的react组件，onEnter即进入页面前的处理，可以在此对路由进行预处理，onLeave同理。通过这种方式，能解决前端路由问题。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;题外&lt;/h3&gt;
&lt;p&gt;hashHistory的#总是有点奇怪的，表现上有点像把html的锚点重定义了。在现在H5的语义化大环境下，这并不是一个好的解决方案。所以，react-router提供了browserHistory这样传统的解决方案。&lt;/p&gt;

&lt;p&gt;在之前的项目中没有使用browserHistory的原因有：
1. 前期调研不充分。
2. 时间紧张，没有时间进行对应改造。&lt;/p&gt;

&lt;p&gt;闲暇时间尝试过修改为browserHistory，涉及到了一些代码目录结构修改和路由重定向的问题，还有一些部署优化的问题，暂时没有动手。&lt;/p&gt;

&lt;h2 id=&quot;reduxhttpreduxjsorg&quot;&gt;&lt;a href=&quot;http://redux.js.org/&quot;&gt;Redux&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;还好我们的应用不是很大，使用react-router拆分后，页面状态没有爆炸，暂时用不到redux。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;redux是一个状态树管理框架，主要解决的问题就是状态的管理，可以类似理解为一个状态管理中心。不理解可以参考接触的各种注册/提供/消费模式，如Dubbo，在redux中注册，标明谁来更新状态，状态更新后通知谁更新。&lt;/p&gt;

&lt;p&gt;暂时只阅读了相关文档没有实际使用，不再赘述。&lt;/p&gt;

&lt;h2 id=&quot;npmwebpack&quot;&gt;npm和webpack及其他&lt;/h2&gt;
&lt;p&gt;用之前的项目理解，npm和webpack共同构成了一个maven。&lt;/p&gt;

&lt;h3 id=&quot;npm&quot;&gt;npm&lt;/h3&gt;
&lt;p&gt;包管理工具，依赖管理工具，下载包，执行配置命令等。&lt;/p&gt;

&lt;h3 id=&quot;webpack&quot;&gt;webpack&lt;/h3&gt;
&lt;p&gt;发布工具，发布前预处理等。&lt;/p&gt;

&lt;h3 id=&quot;packagejson&quot;&gt;package.json&lt;/h3&gt;
&lt;p&gt;作用类似pom.xml&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;开发工具&lt;/h2&gt;
&lt;p&gt;一般就是sublime text和atom，两种都是非常好的编辑器，并且开发es6+react时并没有太多差别，都有相关插件。&lt;/p&gt;

&lt;h3 id=&quot;sublime-text3&quot;&gt;sublime text3&lt;/h3&gt;
&lt;p&gt;离线安装插件需要安装PyV8，步骤参考&lt;a href=&quot;https://packagecontrol.io/installation&quot;&gt;这里&lt;/a&gt;。
1. 打开Preferences &amp;gt; Browse Packages。
2. 向上一级，找到Installed Packages/目录，没有则手动创建。
3. 下载&lt;a href=&quot;https://packagecontrol.io/Package%20Control.sublime-package&quot;&gt;Package Control.sublime-package&lt;/a&gt;，复制到Installed Packages/。
4. 重启sublime text3。&lt;/p&gt;

&lt;h3 id=&quot;atom&quot;&gt;atom&lt;/h3&gt;
&lt;p&gt;atom可以直接问(度娘)[http://jingyan.baidu.com/article/375c8e19c3105a25f2a22901.html]，初始步骤只有一个：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;asciidoc&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;section-5&quot;&gt;相关插件&lt;/h3&gt;
&lt;p&gt;离线下载插件包安装地址：&lt;a href=&quot;https://packagecontrol.io/&quot;&gt;sublime相关&lt;/a&gt;，&lt;a href=&quot;https://atom.io/packages&quot;&gt;atom相关&lt;/a&gt;。请阅读英文介绍，使用es6相关的，使用人数较多的插件。&lt;/p&gt;

&lt;p&gt;两种编辑器需要的插件基本相同，找关键字，：
- babel：es6语法插件。
- emmet：HTML标签自动补全。
- autocomplete：代码自动补全。
- react snippets：react代码片段。&lt;/p&gt;

&lt;p&gt;其他暂时没有想到，可以自行在网站检索。&lt;/p&gt;

&lt;p&gt;因为GBK字符集问题，sublime额外需要ConvertToUTF8和Encoding Helper插件。atom没有使用过暂不清楚。&lt;/p&gt;

&lt;h1 id=&quot;app&quot;&gt;和掌银框架、APP使用&lt;/h1&gt;
&lt;p&gt;和掌银结合时，主要有两个问题需要解决：
1. 1x、2x和3x缩放和iOS沉浸式webview适配。
2. Android物理返回键处理。&lt;/p&gt;

&lt;h2 id=&quot;webview&quot;&gt;缩放和沉浸式webview适配&lt;/h2&gt;
&lt;p&gt;缩放和适配相对比较简单：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;docEl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;documentElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;resizeEvt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;orientationchange&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;orientationchange&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;resize&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;recalc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UAParser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clientWidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;docEl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;baseSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientWidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;320&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;docEl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fontSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;baseSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;px&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// iOS 7以上的都为沉浸式，需要额外的高度&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;iOS&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;g-header-line&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;baseSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;px&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
        
      &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;android&quot;&gt;Android物理返回键处理&lt;/h2&gt;
&lt;p&gt;物理返回键比较复杂，原因主要为，需要切换webview。这里不得不说，有些页面，如登录、支付，还是能做成native弹框以便到处调用比较好，那样就不会有这个问题了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;使用webview cookie来实现返回&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在该APP中，多个webview之间共享cookie。利用cookie，我们可以实现类似于native的返回。目前使用的技术有：react、react-router、react-cookie。&lt;/p&gt;

&lt;p&gt;第一版思路：
1. 各个页面专注自己的业务逻辑，将返回封装到NavBar。
2. 压栈操作放在react-router的onEnter方法中来进行操作。&lt;/p&gt;

&lt;p&gt;流程如图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xogz7.com1.z0.glb.clouddn.com/CookieHistoryBeta1.png&quot; alt=&quot;歌王争霸栈v0.0.1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;代码如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 压栈函数&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pushPageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;trace&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAGE_TRACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAGE_TRACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;storeUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;storeUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAGE_TRACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 压栈&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;route&amp;#39;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onEnter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pushPageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()}}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 返回按钮&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NavBar&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;goBack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAGE_TRACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;backUrl&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;backUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;Cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAGE_TRACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;backUrl&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在实际使用的过程中，有几个问题：
1. 需要有个时机来清空栈。
2. 部分页面需要设置特殊的返回页面，如支付结果页面不再回到支付订单详情确认页面而是回到商品信息页面。
3. 对栈底需要进行特殊处理，不能空栈。&lt;/p&gt;

&lt;p&gt;修改如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 压栈函数&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pushPageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clear&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;specialUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;trace&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clear&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAGE_TRACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAGE_TRACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;storeUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;specialUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;specialUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;storeUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAGE_TRACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 返回按钮&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NavBar&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;goBack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clicked&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;clicked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAGE_TRACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;backUrl&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;backUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;backUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;backUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;Cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAGE_TRACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;backUrl&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;todo&quot;&gt;TODO&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;如何使用browserHistory。&lt;/li&gt;
  &lt;li&gt;使用Redux。&lt;/li&gt;
  &lt;li&gt;制作自己的组件库，支持自定义样式。&lt;/li&gt;
  &lt;li&gt;css压缩优化。&lt;/li&gt;
  &lt;li&gt;scss和less。&lt;/li&gt;
  &lt;li&gt;淘宝在移动端和chrome等使用webp，在其他端使用jpeg和png，如何做到。&lt;/li&gt;
  &lt;li&gt;Controller层session和shiro/JWT与前端路由的使用。&lt;/li&gt;
  &lt;li&gt;使用webpack插件做到如maven的各个环境独立配置，文本替换，加入js等文件的hash值。&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 06 Jun 2016 00:00:00 +0800</pubDate>
        <link>http://techctu.github.io//2016/06/06/react%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97.html</link>
        <guid isPermaLink="true">http://techctu.github.io//2016/06/06/react%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97.html</guid>
        
        
      </item>
    
      <item>
        <title>Hybird模式下webview中的物理返回键问题的解决方法</title>
        <description>&lt;p&gt;最近做的一个移动端H5项目，需要嵌入某个移动APP中。为了达到近似APP的效果，在H5页面顶部设计了标题栏和返回键。&lt;/p&gt;

&lt;h1 id=&quot;historygoback&quot;&gt;使用history.goback的问题&lt;/h1&gt;
&lt;p&gt;在网页浏览器中，一般使用浏览器的自带回退来返回上一页，网站一般开发只对回退时是否提交上一页表单等问题进行处理，并不修改浏览器的回退行为。而在Hybird模式下，部分功能，如登录、绑卡、支付等流程都是在native下进行，这样就会出现native和webview之间的跳转，会导致history.goback失效。所以需要自己实现一套返回机制。&lt;/p&gt;

&lt;h1 id=&quot;webview-cookie&quot;&gt;使用webview cookie来实现返回&lt;/h1&gt;
&lt;p&gt;在该APP中，多个webview之间共享cookie。利用cookie，我们可以实现类似于native的返回。目前使用的技术有：react、react-router、react-cookie。&lt;/p&gt;

&lt;h2 id=&quot;v001&quot;&gt;歌王争霸栈v0.0.1&lt;/h2&gt;
&lt;p&gt;第一版思路：
1. 各个页面专注自己的业务逻辑，将返回封装到NavBar。
2. 压栈操作放在react-router的onEnter方法中来进行操作。&lt;/p&gt;

&lt;p&gt;流程如图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xogz7.com1.z0.glb.clouddn.com/CookieHistoryBeta1.png&quot; alt=&quot;歌王争霸栈v0.0.1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;代码如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 压栈函数&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pushPageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;trace&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAGE_TRACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAGE_TRACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;storeUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;storeUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAGE_TRACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 压栈&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;route&amp;#39;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onEnter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pushPageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()}}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 返回按钮&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NavBar&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;goBack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAGE_TRACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;backUrl&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;backUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;Cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAGE_TRACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;backUrl&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;v010&quot;&gt;守望仙栈v0.1.0&lt;/h2&gt;
&lt;p&gt;在实际使用的过程中，有几个问题：
1. 需要有个时机来清空栈。
2. 部分页面需要设置特殊的返回页面，如支付结果页面不再回到支付订单详情确认页面而是回到商品信息页面。
3. 对栈底需要进行特殊处理，不能空栈。&lt;/p&gt;

&lt;p&gt;修改如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 压栈函数&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pushPageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clear&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;specialUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;trace&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clear&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAGE_TRACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAGE_TRACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;storeUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;specialUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;specialUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;storeUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAGE_TRACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 返回按钮&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NavBar&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;goBack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clicked&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;clicked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAGE_TRACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;backUrl&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;backUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;backUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;backUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;Cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PAGE_TRACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;backUrl&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Thu, 19 May 2016 00:00:00 +0800</pubDate>
        <link>http://techctu.github.io//2016/05/19/hybird%E6%A8%A1%E5%BC%8F%E4%B8%8Bwebview%E4%B8%AD%E7%9A%84%E7%89%A9%E7%90%86%E8%BF%94%E5%9B%9E%E9%94%AE%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html</link>
        <guid isPermaLink="true">http://techctu.github.io//2016/05/19/hybird%E6%A8%A1%E5%BC%8F%E4%B8%8Bwebview%E4%B8%AD%E7%9A%84%E7%89%A9%E7%90%86%E8%BF%94%E5%9B%9E%E9%94%AE%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html</guid>
        
        
      </item>
    
      <item>
        <title>第一次ReactJS前端开发记录</title>
        <description>&lt;p&gt;&lt;code&gt;这是一个坑&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;ui&quot;&gt;从UI和静态页面到组件&lt;/h1&gt;
&lt;p&gt;ReactJS结构和普遍的前端web技术非常不一样。从流程上来说，一个页面的更新，是跟业务相关的：从后台取到初始化数据，进行业务流程的判断，然后将数据加工处理到页面上。而当前很多专门做前端的公司，并不注重技术更新，用的还是JQuery速成培训那一套；同时第一次采用ReactJS并没有设计前端静态页面要求的经验，导致合作起来问题比较多。同时，很多问题在测试时才暴露出来。而且，很多也不够&lt;a href=&quot;http://www.tuicool.com/articles/vuYjUfM&quot;&gt;语义化&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;tips&quot;&gt;TIPS&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/yisuowushinian/article/details/50404450&quot;&gt;H5 CSS设置&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.tuicool.com/articles/vuYjUfM&quot;&gt;语义化&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://aseoe.baijia.baidu.com/article/169270&quot;&gt;组件化&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://isux.tencent.com/h5-performance.html&quot;&gt;性能优化&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 08 May 2016 00:00:00 +0800</pubDate>
        <link>http://techctu.github.io//2016/05/08/%E7%AC%AC%E4%B8%80%E6%AC%A1reactjs%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E8%AE%B0%E5%BD%95.html</link>
        <guid isPermaLink="true">http://techctu.github.io//2016/05/08/%E7%AC%AC%E4%B8%80%E6%AC%A1reactjs%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E8%AE%B0%E5%BD%95.html</guid>
        
        
      </item>
    
  </channel>
</rss>

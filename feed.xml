<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Avalon</title>
    <description>抱朴 守拙
</description>
    <link>http://techctu.github.io//</link>
    <atom:link href="http://techctu.github.io//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sat, 09 Apr 2016 10:19:18 +0800</pubDate>
    <lastBuildDate>Sat, 09 Apr 2016 10:19:18 +0800</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>使用ReactJS简单封装BaiduMap</title>
        <description>&lt;p&gt;最近需要使用百度地图来获取地理位置定位，用ReactJS封装了一下。&lt;/p&gt;

&lt;p&gt;要点：
- 希望百度地图加载不影响ReactJS生命周期
- 将百度地图回调方法和ReactJS融合&lt;/p&gt;

&lt;p&gt;目前百度地图没有离线API，官网上方式为&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://api.map.baidu.com/api?v=2.0&amp;amp;ak=您的密钥&amp;amp;callback=回调方法&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在页面嵌入了百度地图后，会异步获取一些js脚本，实现地图功能的加载，且加载成功与否难以控制。因此，需要在React组件加载完成的时候加载百度地图。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;componentDidMount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initBaiduMap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;script&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;text/javascript&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;amp;ak=&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ak&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;amp;callback=initBaiduMap&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initBaiduMap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;locate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;componentWillUnmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initBaiduMap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;产生的问题是：
1. 使用了window对象，将React组件的方法绑定到了全局。
2. 在网络异常时没有进行处理。&lt;/p&gt;

&lt;p&gt;对于第2点问题，曾经使用了js中的try catch和绑定onerror来处理，没有成功，待解决。&lt;/p&gt;
</description>
        <pubDate>Sat, 09 Apr 2016 00:00:00 +0800</pubDate>
        <link>http://techctu.github.io//2016/04/09/%E4%BD%BF%E7%94%A8reactjs%E7%AE%80%E5%8D%95%E5%B0%81%E8%A3%85baidumap.html</link>
        <guid isPermaLink="true">http://techctu.github.io//2016/04/09/%E4%BD%BF%E7%94%A8reactjs%E7%AE%80%E5%8D%95%E5%B0%81%E8%A3%85baidumap.html</guid>
        
        
      </item>
    
      <item>
        <title>使用ReactJS实现一个老虎机抽奖组件</title>
        <description>&lt;h1 id=&quot;section&quot;&gt;背景&lt;/h1&gt;
&lt;p&gt;最近的项目技术专家组建议使用ReactJS进行移动Web前端页面开发，理由是要Web前端组件化。便进行了一些研究。&lt;/p&gt;

&lt;h1 id=&quot;reactjs&quot;&gt;ReactJS基础&lt;/h1&gt;
&lt;p&gt;基本的介绍参考&lt;a href=&quot;http://facebook.github.io/react/&quot;&gt;官网&lt;/a&gt;即可。或者参考&lt;a href=&quot;http://www.ruanyifeng.com/blog/2015/03/react.html&quot;&gt;阮一峰的博文&lt;/a&gt;。英文好的可以参考&lt;a href=&quot;http://tylermcginnis.com/reactjs-tutorial-a-comprehensive-guide-to-building-apps-with-react/&quot;&gt;reactjs-tutorial-a-comprehensive-guide&lt;/a&gt;。另外，&lt;a href=&quot;http://my.jikexueyuan.com/4104803609/record/&quot;&gt;极客学院的教程&lt;/a&gt;也不错——如果不嫌时间长的话。&lt;/p&gt;

&lt;h1 id=&quot;section-1&quot;&gt;实现老虎机&lt;/h1&gt;

&lt;h2 id=&quot;section-2&quot;&gt;设计思路&lt;/h2&gt;
&lt;p&gt;整个老虎机抽奖流程比较简单：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;进入老虎机界面，根据客户信息判断抽奖资格。&lt;/li&gt;
  &lt;li&gt;开始抽奖，发送后台请求。&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;获得并显示抽奖结果。
对于前端老虎机组件，需要做的事有：&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;根据初始化数据初始化老虎机，包括奖品信息图文和主流程之外的如规则说明、即时中奖信息等。&lt;/li&gt;
  &lt;li&gt;点击开始，生成动画使老虎机的筹码图案不停滚动。&lt;/li&gt;
  &lt;li&gt;获取到服务器返回结果后，使老虎机图案停止滚动，显示恰当的图案。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-3&quot;&gt;主要难点&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;没有接触过前端动画。&lt;/li&gt;
  &lt;li&gt;ReactJS属于新接触的技术。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-4&quot;&gt;相关参考&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/josex2r/jQuery-SlotMachine&quot;&gt;基于JQuery的老虎机&lt;/a&gt;
&lt;a href=&quot;https://github.com/pathsofdesign/randomItemSpinner&quot;&gt;基于ReactJS的图片切换DEMO&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-5&quot;&gt;实现代码&lt;/h2&gt;
&lt;p&gt;只实现了基本流程，具体使用根据实际UI和业务需要再进行修改。
&lt;a href=&quot;https://github.com/techctu/reactjs-cui/blob/master/src/components/lottery/SlotMachine/SlotMachine.js&quot;&gt;戳这里，欢迎指正&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 27 Feb 2016 00:00:00 +0800</pubDate>
        <link>http://techctu.github.io//2016/02/27/%E4%BD%BF%E7%94%A8reactjs%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E8%80%81%E8%99%8E%E6%9C%BA%E6%8A%BD%E5%A5%96%E7%BB%84%E4%BB%B6.html</link>
        <guid isPermaLink="true">http://techctu.github.io//2016/02/27/%E4%BD%BF%E7%94%A8reactjs%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E8%80%81%E8%99%8E%E6%9C%BA%E6%8A%BD%E5%A5%96%E7%BB%84%E4%BB%B6.html</guid>
        
        
      </item>
    
      <item>
        <title>组件化web开发和UI设计落地的思考</title>
        <description>&lt;h1 id=&quot;reactjsinline-stylecss-module&quot;&gt;此文废弃，ReactJS和inline style，css module就是我想要的&lt;/h1&gt;

&lt;h1 id=&quot;section&quot;&gt;背景&lt;/h1&gt;
&lt;p&gt;最近项目UED小组开了一次会，目的是想了解各个开发小组对前端的需求和目前现有项目的设计规范、技术要点。平台技术大牛在会议中透露了想要进行组件化web开发的想法，然后我就有了点想法。设计和开发之间，总是有那么点沟通或是理解上的差异，加上各自的知识面和约束都不尽相同，这就导致设计出来的UE、UI与开发成果有一定的出入。组件化能不能帮助解决这个问题？边写这篇小文边试验一下也是个不错的方法。&lt;/p&gt;

&lt;h1 id=&quot;section-1&quot;&gt;需求&lt;/h1&gt;
&lt;p&gt;首先要明确自己想要的组件是什么样的。&lt;/p&gt;

&lt;p&gt;目前，我们大概有这么几种需要进行web开发的地方
- PC web
- Mobile phone web（触屏）
- App webview
- Pad web&lt;/p&gt;

&lt;h2 id=&quot;ui&quot;&gt;UI设计&lt;/h2&gt;
&lt;p&gt;在大部分情况下，设计出来的UI或多或少会有一定的规则：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;按照一般思路，UE倾向于将常用的组件行为统一，最典型的就是确认弹出框的确定居右，颜色绿色，取消按钮灰色等设置。&lt;/li&gt;
  &lt;li&gt;按钮不同状态的形状、颜色等，状态转换时的形状、声音、动画等，如悬浮时颜色的变化，悬浮时菜单的动画。&lt;/li&gt;
  &lt;li&gt;打开新页面和返回的动画方向相反，激活的标签图标字体更大更显眼等。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;组件设计&lt;/h2&gt;
&lt;p&gt;类似这样的设计，一方面可以指导用户体验一致性的实现，不至于出现同是弹出警告一个标题背景红色一个绿色的情况；另一方面也可以便于前端工程师将同类组件封装，供其他人调用。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;组件有自己的样式，不和其他未知的样式冲突。&lt;/li&gt;
  &lt;li&gt;组件有自己的相关逻辑代码，不和其他未知的逻辑代码冲突。&lt;/li&gt;
  &lt;li&gt;不需要占位符，使用者可以自己将组件赋值给变量，用自定的id或者别的选择器来告知组件库识别，并进行初始化。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-3&quot;&gt;相关技术&lt;/h2&gt;
&lt;p&gt;### Web
### 非Web&lt;/p&gt;

&lt;h1 id=&quot;section-4&quot;&gt;经历&lt;/h1&gt;
&lt;p&gt;曾经有几个移动项目，我参与了其中UE设计、UI审核、监督UE和UI落地的工作。更久以前，我还进行过一个大型项目的前端web开发。&lt;/p&gt;

&lt;h2 id=&quot;pc-web&quot;&gt;远古记忆中参与的PC web前端开发&lt;/h2&gt;
&lt;p&gt;称这个项目为项目pancake好了，简化为项目p，不要问我为什么。项目p的前端为PC web，研发遵循用Axure制作低保真原型并和相关方确认需求的方式，经过多次重构，确定一个版本再进行增量设计的方式。在UI方面，由专门的小组按照UE设计UI，并实现了静态web页面，包括css的编写和基本的页面HTML，确保静态页面和UI设计一致。开发人员则根据静态页面来开发，编写业务逻辑。现在看来，在实施过程中，有这么几个方面的问题。&lt;/p&gt;

&lt;h3 id=&quot;ue&quot;&gt;远古UE&lt;/h3&gt;
&lt;p&gt;刚开始用Axure，都是赶鸭子上架，啥都不会瞎搞，连个公共库都没有。这时还分了好几个项目组，每个小组设计各自的UE，结果就是一个按钮，有方的，有圆的，有圆角矩形的，有拟物风格的，有扁平风格的，整个就是个大杂烩。不久在一个碰头会上，我们立刻发现了这个问题，UE组遍立刻把实现一个基础的带有导航条、模态框、按钮、分割线等的共享库提高到了最高优先级。&lt;/p&gt;

&lt;h3 id=&quot;ui-1&quot;&gt;从UI到开发&lt;/h3&gt;
&lt;p&gt;当时我只涉及了UE设计和前端开发，UI设计和静态页面都是别的团队做的，对UE到UI和UI到静态页面不甚了解。大体情况就是有一个到两个UI设计人员，然后有几个前端工程师将UI设计转化为静态页面。&lt;/p&gt;

&lt;p&gt;这个时候，开发的方式还比较古老，代码里都是这样的：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;a.css&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;n.css&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;xxx&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;class-a class-b ... class n&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;a.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;n.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在开发过程中，碰到了这么几个问题：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;静态页面按照UE页面分配给不同的人去实现，只有页眉和页脚采用了公共样式，其他部分只有口头约定，并没有设计公共样式，存在大量拷贝复制的css样式。	&lt;/li&gt;
  &lt;li&gt;css命名不规范，存在大量以人名命名的css样式，后期维护困难。&lt;/li&gt;
  &lt;li&gt;前端公共库函数开发时遇到css样式冲突和前端业务开发遇到命名冲突的问题。&lt;/li&gt;
  &lt;li&gt;一个控件的css调整涉及多个页面。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;app&quot;&gt;基于古怪的移动端跨平台框架的app项目&lt;/h2&gt;
&lt;p&gt;在这几个项目中，UI的实现流程基本上是这样：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;技术比较好的开发人员实现一个典型页面。&lt;/li&gt;
  &lt;li&gt;其他人拿着UI的标注，对照UE和典型页面，实现自己的页面。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这种模式下，大部分都是copy-paste，而且很多开发人员并没有写过css，也很少做过直接从UI设计稿实现一个页面的工作，对UE、UI的设计目的的理解不是很到位。同时UI也缺乏一个可参考的规范，标注出某个类型的按钮用在什么场景，有什么样的样式，对应哪种状态。&lt;strong&gt;这就导致页面开发出来和设计稿相去太远。&lt;/strong&gt;很多开发者都需要经过一个项目，才知道如何解读UI设计。当时就想，如果能提供一个组件，开发者只需要引用，可以自己进行赋值，不会造成命名冲突，不需要关注样式，这样能更方便开发出如设计一样的界面吧。&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;吐个槽：这个宣称跨平台一次便携到处编译的框架，基本原理就是写了两个解析器来解析xhtml页面文件，一个对应iOS，一个对应Android，解析成java和objc。效率什么的暂且还是可以的，优化什么的是个谜，代码风格非常hybird，动效想想就好。在这两个项目里，UE和UI的设计由于框架的原因，受到了极大限制，稍微复杂一点的多选项关联修改都很难实现，对关联数据的校验也陷入了泥潭。更可怕的是，到处是不规范的全局变量名，css、lua函数都是每个人各写各的，充满了copy-paste风格的写法，加上类似php+js+html的混杂写法和缺乏有效的语法高亮支持，整个就是个噩梦。
***&lt;/p&gt;
</description>
        <pubDate>Sun, 20 Dec 2015 00:00:00 +0800</pubDate>
        <link>http://techctu.github.io//%E5%89%8D%E7%AB%AF/2015/12/20/%E7%BB%84%E4%BB%B6%E5%8C%96web%E5%BC%80%E5%8F%91%E5%92%8Cui%E8%AE%BE%E8%AE%A1%E8%90%BD%E5%9C%B0%E7%9A%84%E6%80%9D%E8%80%83.html</link>
        <guid isPermaLink="true">http://techctu.github.io//%E5%89%8D%E7%AB%AF/2015/12/20/%E7%BB%84%E4%BB%B6%E5%8C%96web%E5%BC%80%E5%8F%91%E5%92%8Cui%E8%AE%BE%E8%AE%A1%E8%90%BD%E5%9C%B0%E7%9A%84%E6%80%9D%E8%80%83.html</guid>
        
        <category>前端</category>
        
        <category>组件化</category>
        
        
        <category>前端</category>
        
      </item>
    
      <item>
        <title>Java系Dubbo、Zookeeper系统服务拆分记录</title>
        <description>&lt;p&gt;事情发展情况总是偏离人的预想，尤其是业务发展和系统架构设计。一段时间后，一个新业务功能的上线往往伴随着几个相关功能的开发小组加班。同时甲组功能A可能依赖乙组功能B，乙组由于某个需求要更改功能B，而甲组开发新功能需要继续依赖功能B，且分配的开发时间并不一致。这样，协调起来会非常麻烦，效率也十分低下。于是，服务拆分的呼声越来越烈。经过几个月的研究、拆分、测试、上线，终于初步解决了服务间相互依赖的问题，便记录一下。
# 理想并不丰满
任何业务系统的架构都是和业务紧密关联的，当时拟定有几个业务产品，一个后台管理，自己建立用户体系和账户体系，对接外系统接口，底层提供一系列日志、事务等平台服务。这个时候，分层逻辑是这样的：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;页面展现层：web、Controller。 &lt;/li&gt;
  &lt;li&gt;业务逻辑层：services。&lt;/li&gt;
  &lt;li&gt;平台服务层：Utils。&lt;/li&gt;
  &lt;li&gt;基础设施层：Database、Logs。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;项目结构是这样的：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Utils：提供统一异常管理、日志服务、事务处理、服务注册和发布、日期转换等工具类。&lt;/li&gt;
  &lt;li&gt;Apis：映射数据库表的domain类＋各个业务逻辑的Interfaces。&lt;/li&gt;
  &lt;li&gt;Services：各个产品服务实现类。&lt;/li&gt;
  &lt;li&gt;Web：MVC层，访问服务并展示页面。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;并且规定了Service相关的编码规范，如：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;不同产品Service之间需要通过Interface调用，不能直接调用实现。&lt;/li&gt;
  &lt;li&gt;所有产品业务类Service不能直接调用Dao，需要在上面封装一层基础Service。&lt;/li&gt;
  &lt;li&gt;Service调用不能形成循环依赖。&lt;/li&gt;
  &lt;li&gt;业务逻辑必须放在Service中，不能放在Controller里。&lt;/li&gt;
  &lt;li&gt;分层结构中不允许逆向调用，即下层不允许调用上层的代码。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;看起来不错，然而domain呢？产品直接调用这些参数类型怎么办？各个产品Service相互调用，产品内部是否需要封装别的产品的Interface？后来才知道，这些都是坑。
# 现实很骨感
当时工期很紧，团队新组建，还要和别的团队一起开发，技术人员素质参差不齐，到后来规定执行不力，但勉勉强强没出大问题。&lt;/p&gt;

&lt;p&gt;后来，只有三个产品上线，其中两个是用户体系和账户体系，也就是说真正业务部分只有产品A，其它产品都没有什么活力。这时候倒也没有什么问题。可产品是会增加的。产品增加，就会出现如下情况：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xogz7.com1.z0.glb.clouddn.com/ServiceRef.png?imageMogr2/thumbnail/770x&quot; alt=&quot;Service变更&quot; /&gt;&lt;/p&gt;

&lt;p&gt;而且，出于项目迭代、运维管理的需要，会有上线窗口，这就导致了Service B 2.0部分代码提交，但还没有上线，Service A却需要上线的情况。更有可能有多个Service依赖不同版本的同一个Service的情况出现。这时候面临的就是一个功能的修改，都可能有好几个小组加班。&lt;/p&gt;

&lt;p&gt;经过几个新产品的开发和外部接口变换导致的内部代码的调整，可以预见，随着产品的增加，整个系统内部的耦合性会急剧增加，新功能、新产品的开发会越来越困难，一个功能点可能会涉及多个产品的更改，并且存在由于种种原因不使用Interface直接使用Service的情况，典型如图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xogz7.com1.z0.glb.clouddn.com/domainandserviceinfection.png?imageMogr2/thumbnail/770x&quot; alt=&quot;Domain传递和Service依赖&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ABCD可能属于不同的产品，ACD可能需要不同版本的B的method1的实现，Class B也有可能需要修改，且各自的deadline并不相同。这就存在了B从version 1到version 2的修改过程中，其它产品夹带代码的问题。为了解决这个问题，服务拆分小组对现有代码进行了分析，发现现有代码存在几个问题：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Domain使用了Spring的ApplicationContext.getContext方式来获取Service实例。&lt;/li&gt;
  &lt;li&gt;Service没有使用Interface，直接使用了实现类。&lt;/li&gt;
  &lt;li&gt;产品A直接使用了产品B的domain来传递数据。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;为了解决这些问题，服务拆分小组重新设计了服务开发的规范：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Domain不允许使用Service，保持Domain的纯洁。&lt;/li&gt;
  &lt;li&gt;对外提供服务的返回值采用基本数据类型或者定义VO类。&lt;/li&gt;
  &lt;li&gt;对外提供的服务必须在实际调用的服务上再封装一层。&lt;/li&gt;
  &lt;li&gt;调用其他产品的服务必须时必须封装一层，并实现自己的VO，避免对象污染。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xogz7.com1.z0.glb.clouddn.com/improved.png?imageMogr2/thumbnail/770x&quot; alt=&quot;什么鬼&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这样解决了上面的问题，唯一的问题是结构更加复杂了。&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;遗留问题&lt;/h1&gt;
&lt;p&gt;分布式事务，老大难问题了。&lt;/p&gt;

</description>
        <pubDate>Fri, 11 Dec 2015 00:00:00 +0800</pubDate>
        <link>http://techctu.github.io//%E6%9E%B6%E6%9E%84/2015/12/11/java%E7%B3%BBdubbozookeeper%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1%E6%8B%86%E5%88%86%E8%AE%B0%E5%BD%95.html</link>
        <guid isPermaLink="true">http://techctu.github.io//%E6%9E%B6%E6%9E%84/2015/12/11/java%E7%B3%BBdubbozookeeper%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1%E6%8B%86%E5%88%86%E8%AE%B0%E5%BD%95.html</guid>
        
        <category>架构</category>
        
        <category>IoC</category>
        
        
        <category>架构</category>
        
      </item>
    
      <item>
        <title>登长城记</title>
        <description>&lt;p&gt;十二月正是万物萧索，静心养气的时机。适逢朋友李来京培训，既然来京，便必择一日天气尚可之时，登那长城。&lt;/p&gt;

&lt;p&gt;下了车，路边还有着未化的雪，和更换后的列车倒也相映成趣。大部分人都在八达岭站下了车，有看着像学生，有看着像留学生的，有看着像学生陪着家长的，三三两两出了站。站内看着人多，但毕竟淡季，出战就发现路上车很少，人也很少，一行人就沿着前几天游人踩出的痕迹前行。&lt;/p&gt;

&lt;p&gt;不一会儿，我俩就到了长城脚下。虽然是入口，但不复暑假、国庆、亦或红叶时节的人潮，很容易就买到了票。没有那么多人，启动都快了许多，路也不是很陡，即便有点难度，也没有超出预期，感觉几分钟的时间，就翻过了两座敌楼。这时，开始的兴奋劲儿过去了，稍稍感觉到一丝酸。&lt;/p&gt;

&lt;p&gt;北三楼前，路开始陡了起来。李瞅了瞅，对六十多度的坡表示惊悚，对古人的身体素质表示由衷的羡慕。“真的要继续爬吗？”李问。虽然不记得好汉石到底在哪了，我还是说：“走吧，原版的好汉石就在前边。”说完我便带头向前走去。&lt;/p&gt;

&lt;p&gt;我一直认为在这类景区爬山，其实都是比较容易的。道都修好了，标识也很明显，只要埋头向前走，保持着节奏，就能走很远。唯一有些麻烦的地方就是如果人多的话，速度就会慢下来，节奏也不好保持，容易分神感觉到疲惫，就走不远了。&lt;/p&gt;

&lt;p&gt;到了北四楼，李有些累，靠着墙休息。万幸的是路上虽陡，上周的降雪几本都化干净了，只有点点水渍。在城墙外有条路，尽头有几个人站在护栏里拍照，仿佛是以前到过的好汉石。“好像是原版好汉石，去看看吧。”李双手撑在膝上，咧着嘴说：“你去吧，是的话喊我。”我笑了笑，便往那块去了。果然是好汉石。然而不知为何，上面还有着残雪和冰。&lt;/p&gt;

&lt;p&gt;好汉石上有不少游人合影。手扶着护栏，脚慢慢地在冰面少挪动。排队的人群，险峻的风景，更是平添了不少紧张感。李攀上去时正是逆光，真是如同词本身一般留影。&lt;/p&gt;

&lt;p&gt;从好汉石开始，有不少游人直接返回了。大概是在这里留影已经完成任务，了结心愿。还有部分游人去了滑车。以前在别地玩过一回，速度很快，很有意思。李想着既然看了好汉石，已经可以回去了，只是没找见索道。我觉得既然来了，好歹也是要上北八楼看看，坐索道也要从最高的地方下去。于是我俩继续往前走。&lt;/p&gt;

&lt;p&gt;大概是继续往上的人真的少了，路上可以看到未化开的冰，上边还覆盖着水渍，踩上去极容易滑。这些冰的位置也是十分奇怪。上周有雪，一般人在雪天爬长城，理应攀着护栏，靠两边行走才是，但冰基本集中在右侧护栏下，无声反驳了我的想当然。果然没有亲自来，就不知道他们是怎么做的了。&lt;/p&gt;

&lt;p&gt;终于到了北八楼，游人意外很多。原来是冰雪未化，一边已经封路禁行，只剩下一条楼梯下去。楼梯很窄还有很厚一层冰，所以人们都堵在那儿了。我们便找了个地儿坐下歇歇。&lt;/p&gt;

&lt;p&gt;这时节的长城，没有春季万物复苏的生气；没有夏季的郁郁葱葱；没有秋季漫山遍野的红叶；也没冬季的沁园春。这里有的是轻阳积雪，和枯黄的树木，以及被它们护卫着的点点青松。本来是一片萧条的景色，有了这些青松的存在，倒也别有一番趣味。有橙色的直升机在空中巡逻，大概是消防用的，感觉海拔比我们的位置还低一些。湛蓝的天上时不时有飞机爬升，留下两道不长的航迹云。在这个环境下闲聊，倒也是个不错的体验。&lt;/p&gt;

&lt;p&gt;看看时间，差不多是返程的列车要到了，便下了长城。“可惜晚了点，去不成南楼。”李说。&lt;/p&gt;
</description>
        <pubDate>Sun, 06 Dec 2015 03:37:07 +0800</pubDate>
        <link>http://techctu.github.io//%E6%9D%82%E9%A1%B9/2015/12/06/%E7%99%BB%E9%95%BF%E5%9F%8E%E8%AE%B0.html</link>
        <guid isPermaLink="true">http://techctu.github.io//%E6%9D%82%E9%A1%B9/2015/12/06/%E7%99%BB%E9%95%BF%E5%9F%8E%E8%AE%B0.html</guid>
        
        <category>others</category>
        
        
        <category>杂项</category>
        
      </item>
    
      <item>
        <title>热情、欣赏、诚实——头脑风暴成果演讲反思</title>
        <description>&lt;p&gt;最近，Team Leader一直在搞头脑风暴，想要摩擦出火花，采集闪光的瞬间，集齐七个……嗯，就是想解放思想、实事求是。遂，每逢周三，组内汇聚一堂，坐而论道。&lt;/p&gt;

&lt;p&gt;大头目：“TL，你们搞出啥子幺蛾子了吗？”&lt;/p&gt;

&lt;p&gt;TL：“我们展示一下呗！”&lt;/p&gt;

&lt;p&gt;大头目：“好好好！搞搞搞！”&lt;/p&gt;

&lt;p&gt;然后，这个锅我背了。小组分拨，我被分到了天灾。最后deadline到了，居然让我这个五号位划水辅助当carry。最后不负众望，嗝屁了。不过看到近卫的carry台风，很是欣赏，觉得需要学习一下，知耻而后勇嘛。&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;悲剧的开始&lt;/h1&gt;
&lt;p&gt;作为一个高贵冷艳的程序员，在头脑风暴的时候就是各种划水，只因觉得这种会议太过务虚了。做出一个“惊艳”的产品？什么鬼，简直无法直视。也许是我太挑剔了，也许是我老了，我很少觉得什么东西我会用惊艳这个词去形容。大部分的时候，看到美女会欣赏，看到工具会判断是不是想要的，很少有那种非洲农业不发达看到金坷垃的感觉。而且，也使我想起了每天写文档写了N年还喜欢搞传销的某人。&lt;/p&gt;

&lt;p&gt;大概就是这么反感了，失去了热情，最后自己都不信自己演讲时说的东西了。没有了热情，不相信自己写的东西，演说的时候就会无精打采，这也是演说失败的原因之一。&lt;/p&gt;

&lt;p&gt;其实这样很不好，毕竟在team中，不管这个target对不对，得尽自己一份力。既然过于务虚，那就把它务实，这才是应有之义。&lt;/p&gt;

&lt;h1 id=&quot;section-1&quot;&gt;仓促的准备&lt;/h1&gt;
&lt;p&gt;头脑风暴小组就这么分成了气宗和剑宗。气宗每天都在进行头脑风暴，还掏出了神器Mac Pro，使出了Keynote大法，还不停刺探我宗情报，并进行了一系列反间谍工作。然而我宗认为领导在对面，本身这个事情又是务虚，所有人都没有放在心上，组员都没有积极参与，无法进行有效的组织。最后，我只能临危受命，将组员最近在研究的一项技术进行介绍。毕竟这项技术和我们演讲的主题有着一定的关联。&lt;/p&gt;

&lt;p&gt;此时，我们手里的材料只有这个未完成待验证的项目；我们知道的是气宗要使用酷炫的Keynote；气宗已经做了一周，而我们的准备时间是从现在起到明天下午开始演讲为止。WTF！没办法，只能想办法吹了。&lt;/p&gt;

&lt;p&gt;正所谓知己知彼，百战不殆。敌方情报工作那么到位，想要与之一战，就只能从了解己方着手了。&lt;/p&gt;

&lt;p&gt;跑了跑那个项目，果然是个未完成品，唯一拿得出手的只有概念——自动化测试了。此时的我已经开始质疑这个项目的重要性——我自己都不能说服自己，拿什么去说服别人呢？只能取巧，依靠一些技法了。&lt;/p&gt;

&lt;p&gt;为了让展示不逊于Keynote，便求助于&lt;a href=&quot;http://impressjs.devpost.com/&quot;&gt;impress.js&lt;/a&gt;，使效果更加酷炫；同时开始计划讲稿，让听众忘记询问项目的不足和完成情况，专注于项目代表的意义。除此之外，最重要的是要我能相信这个项目。然而，我做不到，我不欣赏这个项目。&lt;/p&gt;

&lt;h1 id=&quot;section-2&quot;&gt;悲剧的演讲&lt;/h1&gt;
&lt;p&gt;上台演讲时，确实成功地让听众惊艳于&lt;a href=&quot;http://impressjs.devpost.com/&quot;&gt;impress.js&lt;/a&gt;的效果，专注于项目的意义，从某种意义上来说，是成功的。然而由于我能明显感到和对手台风的巨大差距，这对我来说并不是一个成功的演讲。我并没有说服我自己去欣赏这个项目，所以演讲的时候我无法感动我自己，也无法感染听众。&lt;/p&gt;

&lt;p&gt;痛定思痛，入手了《像TED一样演讲》。&lt;/p&gt;

&lt;p&gt;于2015年8月阅毕。&lt;/p&gt;

</description>
        <pubDate>Sun, 06 Dec 2015 00:00:00 +0800</pubDate>
        <link>http://techctu.github.io//%E6%9D%82%E9%A1%B9/2015/12/06/%E7%83%AD%E6%83%85%E6%AC%A3%E8%B5%8F%E8%AF%9A%E5%AE%9E%E5%A4%B4%E8%84%91%E9%A3%8E%E6%9A%B4%E6%88%90%E6%9E%9C%E6%BC%94%E8%AE%B2%E5%8F%8D%E6%80%9D.html</link>
        <guid isPermaLink="true">http://techctu.github.io//%E6%9D%82%E9%A1%B9/2015/12/06/%E7%83%AD%E6%83%85%E6%AC%A3%E8%B5%8F%E8%AF%9A%E5%AE%9E%E5%A4%B4%E8%84%91%E9%A3%8E%E6%9A%B4%E6%88%90%E6%9E%9C%E6%BC%94%E8%AE%B2%E5%8F%8D%E6%80%9D.html</guid>
        
        <category>演讲</category>
        
        
        <category>杂项</category>
        
      </item>
    
      <item>
        <title>搭建简单jekyll小记</title>
        <description>&lt;p&gt;简单来说，就是&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; + &lt;a href=&quot;http://jekyll.bootcss.com/&quot;&gt;Jekyll&lt;/a&gt; + &lt;a href=&quot;http://www.sublimetext.com/3&quot;&gt;Sublime Text 3&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;碰到的主要问题有&lt;/p&gt;

&lt;h1 id=&quot;sublime-text-3jekyll&quot;&gt;用Sublime Text 3来写Jekyll博客&lt;/h1&gt;
&lt;p&gt;安装插件参考&lt;a href=&quot;/sublimetext3/2015/12/06/%E5%9C%A8mac%E4%B8%8A%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8sublime-text-3%E6%9D%A5%E8%BF%9B%E8%A1%8Cjavascript%E5%BC%80%E5%8F%91.html&quot;&gt;在mac上配置使用sublime-text-3来进行javascript开发&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;然后安装Jekyll插件来使Sublime Text 3认识Jekyll。&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;文件名中文&lt;/h1&gt;
&lt;p&gt;安装了插件后，可以参考&lt;a href=&quot;http://jekyll.bootcss.com/docs/templates/#post_url&quot;&gt;这里&lt;/a&gt;来引入中文。
示例如下：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;{ % post_url 2015-12-06-在mac上配置使用sublime-text-3来进行javascript开发 %}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这里Jekyll使用的pygments不支持liquid，通过{和%之间加空格来显示代码。解决方法可参考&lt;a href=&quot;https://alexpearce.me/2012/04/escaping-liquid-tags-in-jekyll/&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
</description>
        <pubDate>Sun, 06 Dec 2015 00:00:00 +0800</pubDate>
        <link>http://techctu.github.io//jekyll/2015/12/06/%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95jekyll%E5%B0%8F%E8%AE%B0.html</link>
        <guid isPermaLink="true">http://techctu.github.io//jekyll/2015/12/06/%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95jekyll%E5%B0%8F%E8%AE%B0.html</guid>
        
        <category>Jekyll</category>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>在Mac上配置使用Sublime Text 3来进行JavaScript开发</title>
        <description>&lt;p&gt;首先去下载&lt;a href=&quot;http://www.sublimetext.com/3&quot; title=&quot;屠龙宝刀&quot;&gt;Sublime Text 3&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&quot;packagecontrol&quot;&gt;安装PackageControl&lt;/h1&gt;

&lt;p&gt;作为一个新世纪的攻城💩，自然不能使用下载复制一类的粗鄙乡村方法来安装插件，除非乡村公司不让上外网。所以就需要安装&lt;a href=&quot;https://packagecontrol.io/&quot; title=&quot;点击就送&quot;&gt;PackageControl&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;然后使用ctrl＋`召唤出控制台，&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xogz7.com1.z0.glb.clouddn.com/callSublimeText3Console.png?imageMogr2/thumbnail/770x&quot; alt=&quot;召唤控制台&quot; /&gt;&lt;/p&gt;

&lt;p&gt;复制粘贴以下代码：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib.request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;hashlib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;2915d1851351e5ee549c20394736b442&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;8bc59f460fa1548d1514676163dafc88&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;pf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Package Control.sublime-package&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;ipp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sublime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;installed_packages_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;install_opener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_opener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ProxyHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;http://packagecontrol.io/&amp;#39;&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;%20&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;dh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashlib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sha256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hexdigest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Error validating download (got &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; instead of &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;), &lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;please&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;manual&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39; % (dh, h)) &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; 
    &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ipp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;wb&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;注意：官网说了版本不一样神秘代码会有区别，具体还是以官网为准—&amp;gt;&lt;a href=&quot;https://packagecontrol.io/installation&quot; title=&quot;如果不送&quot;&gt;门&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;选择插件包进行安装&lt;/h1&gt;

&lt;p&gt;然后就用&lt;a href=&quot;https://packagecontrol.io/docs/usage&quot; title=&quot;召唤神龙&quot;&gt;cmd＋shift+p&lt;/a&gt;选择需要的插件包安装就好。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xogz7.com1.z0.glb.clouddn.com/installPackage.png?imageMogr2/thumbnail/770x&quot; alt=&quot;插件开门&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xogz7.com1.z0.glb.clouddn.com/choosePackage2Install.png?imageMogr2/thumbnail/770x&quot; alt=&quot;皇上掀牌子了&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里我选择下载了&lt;a href=&quot;https://github.com/kemayo/sublime-text-git&quot; title=&quot;连Git，你懂的&quot;&gt;Git&lt;/a&gt;、&lt;a href=&quot;https://github.com/jisaacks/GitGutter&quot; title=&quot;对比文件&quot;&gt;GitGutter&lt;/a&gt;、&lt;a href=&quot;http://emmet.io/&quot; title=&quot;Zen Coding&quot;&gt;Emmet&lt;/a&gt;、&lt;a href=&quot;https://github.com/alienhard/SublimeAllAutocomplete&quot; title=&quot;全文件检索自动补全&quot;&gt;AllAutocomplete&lt;/a&gt;、&lt;a href=&quot;https://github.com/wbond/sublime_terminal&quot; title=&quot;召唤控制台&quot;&gt;Terminal&lt;/a&gt;、&lt;a href=&quot;https://github.com/spadgos/sublime-jsdocs&quot; title=&quot;注释助手&quot;&gt;DocBlokr&lt;/a&gt; 等。&lt;/p&gt;

&lt;h2 id=&quot;git&quot;&gt;Git的配置&lt;/h2&gt;

&lt;p&gt;其他的插件相对来说简单点，可以在上方链接直接参考文档；Git稍微复杂，单独在下方进行记录。&lt;/p&gt;

&lt;p&gt;可以参考&lt;a href=&quot;https://help.github.com/articles/set-up-git/&quot;&gt;这篇文章&lt;/a&gt;来配置Git。&lt;/p&gt;

&lt;p&gt;参考&lt;a href=&quot;https://help.github.com/articles/generating-ssh-keys/&quot;&gt;这篇文章&lt;/a&gt;来生成SSH Key。&lt;/p&gt;

&lt;p&gt;参考&lt;a href=&quot;https://help.github.com/articles/which-remote-url-should-i-use/#cloning-with-ssh&quot;&gt;这篇文章&lt;/a&gt;来使用SSH来连接GitHub。&lt;/p&gt;

&lt;p&gt;之后，就可以在Sublime Text 3种使用安装的Git插件来进行基本的Git操作了，命令仍然是command+shift+p。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xogz7.com1.z0.glb.clouddn.com/useGitPlugin.png?imageMogr2/thumbnail/770x&quot; alt=&quot;使用Git插件&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果以后使用碰到困难，再另起文章进行记录。&lt;/p&gt;
</description>
        <pubDate>Sun, 06 Dec 2015 00:00:00 +0800</pubDate>
        <link>http://techctu.github.io//sublimetext3/2015/12/06/%E5%9C%A8mac%E4%B8%8A%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8sublime-text-3%E6%9D%A5%E8%BF%9B%E8%A1%8Cjavascript%E5%BC%80%E5%8F%91.html</link>
        <guid isPermaLink="true">http://techctu.github.io//sublimetext3/2015/12/06/%E5%9C%A8mac%E4%B8%8A%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8sublime-text-3%E6%9D%A5%E8%BF%9B%E8%A1%8Cjavascript%E5%BC%80%E5%8F%91.html</guid>
        
        <category>SublimeText3</category>
        
        <category>JavaScript</category>
        
        
        <category>sublimetext3</category>
        
      </item>
    
      <item>
        <title>在Mac上配置使用git</title>
        <description>&lt;p&gt;在 &lt;a href=&quot;http://git-scm.com/download&quot; title=&quot;点击穿越&quot;&gt;git&lt;/a&gt;下载Mac安装程序。&lt;/p&gt;

&lt;p&gt;傻瓜安装git。&lt;/p&gt;

&lt;p&gt;打开Terminal，输入git –version来检查。&lt;/p&gt;

&lt;p&gt;下载 &lt;a href=&quot;https://www.sourcetreeapp.com&quot; title=&quot;点击穿越&quot;&gt;SourceTree&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;傻瓜安装SourceTree并配置本地库和远程库。&lt;/p&gt;
</description>
        <pubDate>Sun, 06 Dec 2015 00:00:00 +0800</pubDate>
        <link>http://techctu.github.io//git/2015/12/06/%E5%9C%A8mac%E4%B8%8A%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8git.html</link>
        <guid isPermaLink="true">http://techctu.github.io//git/2015/12/06/%E5%9C%A8mac%E4%B8%8A%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8git.html</guid>
        
        <category>mac</category>
        
        <category>git</category>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>使用数据库自带的锁机制来处理竞争</title>
        <description>&lt;p&gt;2013年刚入职的时候，做的p2p项目，有这么个需求。&lt;/p&gt;

&lt;p&gt;众所周知，p2p需要去投标，投标就会有竞争。比如阿猫和阿狗都看到一个项目只剩1份了，两个人同时投标。这时候系统就会判断阿猫买一份，余额刚好一份，可以买；在系统确定了这次购买订单，更新余额前，阿狗的请求也到了，系统还没更新余额，这时系统也让阿狗买了一份。这就导致实际上一份卖出了两份，这样并不好，会出现一系列问题，具体什么问题，出门右转找运营。&lt;/p&gt;

&lt;p&gt;那么怎么办呢？就是经典的并发情况下锁机制的设计了。&lt;/p&gt;

&lt;p&gt;当时负责我们p2p组的组长决定利用数据库的锁机制来处理，具体就是在数据库中增加一个字段key，通过对a的值的比对来保证投标的顺利进行。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;oldKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 获取锁值 &lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;processing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 处理 &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;checkKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 检查锁没有变更则更新锁，否则回滚操作 &lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;updateKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
	&lt;span class=&quot;n&quot;&gt;rollback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这样其实会有个问题，即在chenkKey()和updateKey()之间，会有可能有人也投标成功了。&lt;/p&gt;

&lt;p&gt;怎么修改呢？其实很简单。我把chenkKey()和updateKey()合作一个方法checkAndUpdateKey()，直接在数据库中&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newKey&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oldKey&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这样代码逻辑就变成了&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;oldKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 获取锁值 &lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;processing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 处理 &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;checkAndUpdateKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 检查锁值变化并更新锁，失败则回滚操作 &lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;rollback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;搞定。&lt;/p&gt;

&lt;p&gt;P.S.当然这样有个很大的问题，竞争多的时候很容易就投不中标。最好还是类似12306先把请求排队进入一个队列，然后再依次处理——比如一个先进先出队列。&lt;/p&gt;
</description>
        <pubDate>Sun, 06 Dec 2015 00:00:00 +0800</pubDate>
        <link>http://techctu.github.io//2015/12/06/%E4%BD%BF%E7%94%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E8%87%AA%E5%B8%A6%E7%9A%84%E9%94%81%E6%9C%BA%E5%88%B6%E6%9D%A5%E5%A4%84%E7%90%86%E7%AB%9E%E4%BA%89.html</link>
        <guid isPermaLink="true">http://techctu.github.io//2015/12/06/%E4%BD%BF%E7%94%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E8%87%AA%E5%B8%A6%E7%9A%84%E9%94%81%E6%9C%BA%E5%88%B6%E6%9D%A5%E5%A4%84%E7%90%86%E7%AB%9E%E4%BA%89.html</guid>
        
        
      </item>
    
  </channel>
</rss>
